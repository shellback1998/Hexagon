<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonRouteMiddle</name>
    </assembly>
    <members>
        <member name="T:Ingr.SP3D.Route.Middle.PipeInstrument">
            <summary>
            PipeInstrument is the .NET wrapper class for PipeInstrument object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.RoutePart">
            <summary>
            Abstract class upon which RoutePart class wrappers are built.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the RoutePart base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.#ctor">
            <summary>
            Public constructor for the RouteFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.Finalize">
            <summary>
            Destructor for the RoutePart base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.IsF2ClosertoXYZThanF1(Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Route.Middle.RouteFeature)">
            <summary>
            Private function to compare two Features based on Location.
            </summary>
            <param name="oFeat1">Feature1 to be compared</param>
            <param name="oFeat2">Feature2 to be compared</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
             <summary>
             Returns free ports of given type for this part.
             </summary>
             <param name="eType">Port type.</param>
             <returns>
             Read-only collection of free ports of given type on this component.
             </returns>
             <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">Unexpected exception.</exception>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid port type.</exception>        
            <example>This example explains how to call GetConnectablePorts method.
            <code>
             'Define pipe component. 
             Dim oPipeComp As PipeComponent = Nothing 
             'Define read only collection of IPort. 
             Dim oFreePortsCol As ReadOnlyCollection(Of IPort) = Nothing 
             'Call GetConnectablePorts method to get free ports of this component. 
             oFreePortsCol = oPipeComp.GetConnectablePorts(PortType.Piping) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Returns connected ports of the given type on this part.
            </summary>
            <param name="eType">Port type.</param>
            <returns>
            Read-only collection of connected ports of given type on this part.
            </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">Unexpected exception.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid port type.</exception>
            <example>This example explains how to call GetConnectedPorts method.
            <code>
            'Define conduit component. 
            Dim oConduitComp As ConduitComponent = Nothing 
            'Define read only collection of IPort. 
            Dim oPortsCol As ReadOnlyCollection(Of IPort) = Nothing 
            'Call GetConnectedPorts method to get all ports of this component. 
            oPortsCol = oConduitComp.GetPorts(PortType.Conduit) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Returns all ports of a given type on this part.
            </summary>
            <param name="eType">Port type.</param>
            <returns>
            Collection of all ports of given type on this part.
            </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">Unexpected exception.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid port type.</exception>
            <example>This example explains how to call GetPorts method.
            <code>
            'Define cable tray component. 
            Dim oCTComp As CableTrayComponent = Nothing 
            'Define read-only collection of IPort. 
            Dim oPortsCol As ReadOnlyCollection(Of IPort) = Nothing 
            'Call GetPorts method to get all ports of this component. 
            oPortsCol = oCTComp.GetPorts(PortType.Cabletray) </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RoutePart.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            This method was not implemented. 
            </summary>          
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RoutePart.IsBasePart">
            <summary>
            Gets or sets whether the current part is the base part. If not, use the set property to make it a base part.
            Note that this should not be used to convert a base part to a mating part.
            </summary>
            <returns>Boolean; True if it is a base part, else False.</returns>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteCannotConvertBasePartToMatingPart">Cannot convert a base part to a mating part.</exception>
            <example>This example explains how to know whether the part is base part or not.
            <code>
            'Define route part.
            Dim oPart As RoutePart = Nothing
            'Define boolean.
            Dim bIsBasePart as Boolean
            'Use IsBasePart on part to know whether it's a base part or not.
            bIsBasePart = oPart.IsBasePart
            </code>
            </example>  
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RoutePart.Features">
            <summary>
            Gets the features from the base part.
            </summary>
            <returns>ReadOnlyCollection of RouteFeature objects. </returns>
            <example>This example explains how to get features from a part.
            <code>
            'Define route part.
            Dim oPart As RoutePart = Nothing
            'Define boolean.
            Dim oFeatCollection As ReadOnlyCollection(Of RouteFeature) = Nothing
            'Use Features on part to know get the features on part.
            oFeatCollection = oPart.Features
            </code>
            </example> 
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RoutePart.Range">
            <summary>
            Gets or sets the range of the route part.
            </summary>
            <returns>Range box implying the range of the current object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeInstrument.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeInstrument base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeInstrument.#ctor">
            <summary>
            Public constructor for the PipeInstrument base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeInstrument.Finalize">
            <summary>
            Destructor for the PipeInstrument base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.Services.RouteCrossSection">
            <summary>
            Route cross section class for getting or setting cross section attributes.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.Services.RouteCrossSection.Depth">
            <summary>
            Gets or sets the cross section depth.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.Services.RouteCrossSection.Width">
            <summary>
            Gets or sets the cross section width.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.Services.RouteCrossSection.Diameter">
            <summary>
            Gets or sets the cross section diameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.Services.RouteCrossSection.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.Services.RouteCrossSection.CrossSectionShape">
            <summary>
            Gets or sets the cross section shape.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctStockPart">
            <summary>
            DuctStockPart is the .NET wrapper class for Duct part occurence objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctStockPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctStockPart base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctStockPart.#ctor">
            <summary>
            Internal constructor for the DuctStockPart base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctStockPart.Finalize">
            <summary>
            Destructor for the DuctStockPart base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.TransitionFeature">
            <summary>
            Base class for all transition features.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.RouteFeature">
            <summary>
            Abstract class upon which the route Feature class wrappers are built.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IRoutePathFeature">
            <summary>
            Properties and methods common to all path features.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.IRoutePathFeature.Location">
            <summary>
            Location property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the RouteFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteFeature.#ctor">
            <summary>
            Public constructor for the RouteFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteFeature.Finalize">
            <summary>
            Destructor for the RouteFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteFeature.GetSystemChildHelper">
            <summary>
            Private utility method to get and manage the system child helper object.
            </summary>
            <returns>m_oSystemChildHelper - Occurrence to the system child helper object.</returns>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteFeature.Location">
            <summary>
            Gets or sets the location property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteFeature.Range">
            <summary>
            Gets the read-only range box of the feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteFeature.Parts">
            <summary>
            Gets the collecton of parts of a feature.
            </summary>
            <example>This example shows how to get parts from run.
            <code>
            'Get the feature.
            Dim oRouteFeature As RouteFeature = Nothing
            'Define ReadOnlyCollection of routepart
            Dim oParts As ReadOnlyCollection(Of RoutePart) = Nothing        
            'Using Parts property, get the collection of parts on Feature.
            oParts = oRouteFeature.Parts
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteFeature.StartLocation">
            <summary>
            Gets the read-only start location of the route feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteStartLocationException">Failed to get the start location of the route feature.</exception>
            <example>This example shows how to get the start location of the route feature.
            <code>
            'Get the route feature.
            Dim oRouteFeature As RouteFeature = Nothing ' Get required route feature from a run.
            'Get the start location of the route feature.
            Dim oStartLoc As Position
            oStartLoc = oRouteFeature.StartLocation
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteFeature.EndLocation">
            <summary>
            Gets the read-only end location of the route feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteEndLocationException">Failed to get the end location of the route feature.</exception>
            <example>This example shows how to get the end location of the route feature.
            <code>
            'Get the route feature
            Dim oRouteFeature As RouteFeature = Nothing ' Get required route feature from a run.
            'Get the end location of the route feature.
            Dim oEndLoc As Position
            oEndLoc = oRouteFeature.EndLocation
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteFeature.SystemParent">
            <summary>
            Implementation of ISystemChild:System parent property.  Uses the
            system helper of CommonMiddle.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constuctor which takes private business object as input.
            </summary>
            <param name="oPBO">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos">Position</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos">Position</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos">Position</param>
            <param name="vecProj">Vector</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.PointAtDistanceAlong(System.Double)">
            <summary>
            Not implemented.
            </summary>
            <param name="dist">Distance</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Not implemented.
            </summary>
            <param name="posStart">Position</param>
            <param name="dist">Distance</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of the curve.</param>
            <param name="vecNormal">The normal vector of the curve.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>Planar = 1</term>
                   <description>Normal returned, if curve is closed; then this is an oriented normal.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>A normal returned.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Least squares normal returned.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.ScopeN(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity, and if planar, returns the normal for this transition feature.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of the transition feature.</param>
            <param name="vecNormal">The normal vector of the transition feature.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Not implemented.
            </summary>
            <param name="dArea"></param>
            <param name="posCentroid"></param>
            <param name="dInteriaX"></param>
            <param name="dInertiaY"></param>
            <param name="dInertiaXY"></param>
            <param name="dMajorPrncplInertia"></param>
            <param name="dMinorPrncplInertia"></param>
            <param name="dPolarInertia"></param>
            <param name="MjIAxis"></param>
            <param name="MnIAxis"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of the transition feature.
            </summary>
            <param name="posStart">Starting point of transition feature.</param>
            <param name="posEnd">End point of transition feature.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether a given point is on the transition feature.
            </summary>
            <param name="pos">Point to determine whether on this transition feature.</param>
            <returns>True if the point is on the transition feature; False, if the point is not on the transition feature.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this transition feature and the input point.
            </summary>
            <param name="oPoint3d">Input point.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this transition feature at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">oPoint3d cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInCurve"></param>
            <param name="dDist"></param>
            <param name="posSrcPos"></param>
            <param name="posInPos"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInSurf"></param>
            <param name="dDist"></param>
            <param name="posSrcPos"></param>
            <param name="posInPos"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInCurve"></param>
            <param name="colIntPos"></param>
            <param name="colOverlapPos"></param>
            <param name="eIntersectCode"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInObj"></param>
            <param name="colCurves"></param>
            <param name="eIntersectCode"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TransitionFeature.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Not implemented.
            </summary>
            <param name="colIntPos"></param>
            <param name="colOverlapPos"></param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TransitionFeature.Length">
            <summary>
            Finds the length of this transition feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TransitionFeature.Area">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TransitionFeature.Form">
            <summary>
            Finds the closure of this transition feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TransitionFeature.Scope">
            <summary>
            Finds the planarity of this transition feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TransitionFeature.Centroid">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.SurfaceMountFeature">
            <summary>
            Abstract class upon which Route SurfaceMount feature class wrappers are built.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.OfflineFeature">
            <summary>
             OfflineFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.OfflineFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the OfflineFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.OfflineFeature.#ctor">
            <summary>
            Public constructor for the OfflineFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.OfflineFeature.Finalize">
            <summary>
            Destructor for the OfflineFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.SurfaceMountFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the SurfaceMountFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.SurfaceMountFeature.#ctor">
            <summary>
            Public constructor for the SurfaceMountFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.SurfaceMountFeature.Finalize">
            <summary>
            Destructor for the SurfaceMountFeature base class
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.StraightFeature">
            <summary>
             StraightFeature Class is the base class from which all StraightFeatures (Pipe/Hvac/Cableway) are derived.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the StraightFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.#ctor">
            <summary>
            Public constructor for the StraightFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.Finalize">
            <summary>
            Destructor for the StraightFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos">Position</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos">Position</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos">Position</param>
            <param name="vecProj">Vector</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.PointAtDistanceAlong(System.Double)">
            <summary>
            Not implemented.
            </summary>
            <param name="dist">Distance</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            
            </summary>
            <param name="posStart">Position</param>
            <param name="dist">Distance</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of the curve.</param>
            <param name="vecNormal">The normal vector of the curve.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>Planar = 1</term>
                   <description>Normal returned, if curve is closed; then this is an oriented normal.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>A normal returned.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Least squares normal returned.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.ScopeN(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity, and if planar, returns the normal for this straight feature.
            </summary>
            <param name="eScope">Enum which shows the planarity of the straight feature.</param>
            <param name="vecNormal">The normal vector of the straight feature.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the center, area, moments of inertia, and principle axes of a closed planar curve.
            </summary>
            <param name="dArea">Area of the curve.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="dMajorPrncplInertia">Principle moment of inertia to major axis.</param>
            <param name="dMinorPrncplInertia">Principle moment of inertia to minor axis.</param>
            <param name="dPolarInertia">Polar moment of inertia to the normal.</param>
            <param name="MjIAxis">Major principle axis.</param>
            <param name="MnIAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of the straight feature.
            </summary>
            <param name="posStart">Starting point.</param>
            <param name="posEnd">Ending point.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether a given point is on the straight feature.
            </summary>
            <param name="pos">Point to determine if on this straight feature.</param>
            <returns>If True, the point is on the straight feature; if False, the point is not on the straight feature.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this straight feature and the input point.
            </summary>
            <param name="oPoint3d">Input point.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this straight feature at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">oPoint3d cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this straight feature and the input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this straight feature at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">oInCurve cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this straight feature and the input surface.
            </summary>
            <param name="oInSurf">Input surface.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this straight feature at minimum distance.</param>
            <param name="posInPos">Point on input surface at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">oInSurf cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this straight feature and another curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="colIntPos">Output collection of intersection points.</param>
            <param name="colOverlapPos">Output collection of overlap points.</param>
            <param name="eIntersectCode">Enumerator describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">oInCurve cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this straight feature and a surface.
            </summary>
            <param name="oInObj">Input surface.</param>
            <param name="colCurves">Collection of intersection curves, which will be either curves or points.</param>
            <param name="eIntersectCode"></param>
            <exception cref="T:System.ArgumentNullException">oInObj cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.StraightFeature.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Not implemented.
            </summary>
            <param name="colIntPos">Collection of Position objects.</param>
            <param name="colOverlapPos">Collection of Position objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Direction">
            <summary>
            Gets straight feature direction.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.EndPoint">
            <summary>
            Gets straight feature end point.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Infinite">
            <summary>
            Gets straight feature infinite.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.RootPoint">
            <summary>
            Gets straight feature root point.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.StartPoint">
            <summary>
            Gets straight feature start point.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Length">
            <summary>
            Finds the length of this straight feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Area">
            <summary>
            Finds the area of this straight feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Form">
            <summary>
            Finds the closure of this straight feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Scope">
            <summary>
            Finds the planarity of this straight feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.StraightFeature.Centroid">
            <summary>
            Finds the centroid of this straight feature.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeStraightFeature">
            <summary>
             PipeStraightFeature class is the .NET wrapper class representing a PipeStraightFeature object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IPipePathFeature">
            <summary>
            Properties and methods common to all pipe path features.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.IPipePathFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the InsulationSpec on the feature.
            </summary>
            <param name="PipeInsulationSpec">PipeInsulationSpec object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.IPipePathFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns insulation specification to the feature. Passed in InsulationTemperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.IPipePathFeature.ShortCode">
            <summary>
            Gets or sets the short code property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.IPipePathFeature.InsulationSpec">
            <summary>
            Gets the insulation specification assigned to the feature property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStraightFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeStraightFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStraightFeature.#ctor">
            <summary>
            Public constructor for the PipeStraightFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStraightFeature.Finalize">
            <summary>
            Destructor for the PipeStraightFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStraightFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the insulation specification on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStraightFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. The passed in insulation temperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeStraightFeature.ShortCode">
            <summary>
             Gets or sets the short code property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeStraightFeature.InsulationSpec">
            <summary>
             Gets the insulation specification property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeEndFeature">
            <summary>
             PipeEndFeature class is the .NET wrapper class representing a PipeEndFeature object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.EndFeature">
            <summary>
             EndFeature Class is the base class from which all EndFeatures (Pipe/Hvac/Cableway) are derived.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.EndFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the EndFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.EndFeature.#ctor">
            <summary>
            Public constructor for the EndFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.EndFeature.Finalize">
            <summary>
            Destructor for the EndFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.EndFeature.IsIntermediateFeature">
            <summary>
            Checks whether the end feature is an intermediate end feature or not.
            </summary>
            <returns>Boolean</returns>
            <example>This example explains how to check whether the end feature is an intermediate end feature or not.
            <code>
            'Create the EndFeature.
            Dim oEndFeat As EndFeature = Nothing
            Dim bIsIntermediateEndFeat As Boolean = False
            'Call IsIntermediateFeature on EndFeature
            bIsIntermediateEndFeat = oEndFeat.IsIntermediateFeature()        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeEndFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeEndFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeEndFeature.#ctor">
            <summary>
            Public constructor for the PipeEndFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeEndFeature.Finalize">
            <summary>
            Destructor for the PipeEndFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeEndFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the insulation specification on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeEndFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. The passed in insulation temperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeEndFeature.ShortCode">
            <summary>
            Gets or sets the short code property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeEndFeature.InsulationSpec">
            <summary>
             Gets the insulation specification property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctEndFeature">
            <summary>
            Wrapper for Route DuctEndFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctEndFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctEndFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctEndFeature.#ctor">
            <summary>
            Public constructor for the DuctEndFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctEndFeature.Finalize">
            <summary>
            Destructor for the DuctEndFeature base class
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctSlantTransitionFeature">
            <summary>
            Wrapper class for Route class DuctSlantTransitionFeature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSlantTransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctSlantTransitionFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSlantTransitionFeature.#ctor">
            <summary>
            Public constructor for the DuctSlantTransitionFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSlantTransitionFeature.Finalize">
            <summary>
            Destructor for the DuctSlantTransitionFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.AlongLegFeature">
            <summary>
             AlongLegFeature Class is the base class from which all AlongLegFeatures (Pipe/Hvac/Cableway) are derived.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.AlongLegFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the AlongLegFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.AlongLegFeature.#ctor">
            <summary>
            Public constructor for the AlongLegFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.AlongLegFeature.Finalize">
            <summary>
            Destructor for the AlongLegFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeAlongLegFeature">
            <summary>
             PipeAlongLegFeature class is the .NET wrapper class representing a PipeAlongLegFeature object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeAlongLegFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.#ctor">
            <summary>
            Public constructor for the PipeAlongLegFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.Finalize">
            <summary>
            Destructor for the PipeAlongLegFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the insulation specification on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. Passed in insulation temperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.ShortCode">
            <summary>
             Gets or sets the short code property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeAlongLegFeature.InsulationSpec">
            <summary>
             Gets the insulation specification property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CableTrayComponent">
            <summary>
            CableTrayComponent is the .NET wrapper class for cable tray Component occurence objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayComponent.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CableTrayComponent base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayComponent.#ctor">
            <summary>
            Internal constructor for the CableTrayComponent base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayComponent.Finalize">
            <summary>
            Destructor for the CableTrayComponent base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.RouteRun">
            <summary>
            Abstract class upon which RouteRun class wrappers are built.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.RouteRun.E_OUTOFMEMORY">
            <summary>
            E_OUTOFMEMORY constant value is 2147942414.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.RouteRun.E_INVALIDARG">
            <summary>
            E_INVALIDARG constant value is 2147942487.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.RouteRun.E_NOINTERFACE">
            <summary>
            E_NOINTERFACE constant value is 2147500034.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.RouteRun.E_CATALOG_NOTHICKNESS">
            <summary>
            E_CATALOG_NOTHICKNESS constant value is 2147746816.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the RouteRun base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.#ctor">
            <summary>
            Public constructor for the RouteRun base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.Finalize">
            <summary>
            Destructor for the RouteRun base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Implementation of ISystem:AddSystemChild using the system helper of
            CommonMiddle.
            </summary>
            <param name="oChild">Wrapped system object to be added to the collection
            of children.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetSystemHelper">
            <summary>
            Private utility method to get and manage the system helper object.
            </summary>
            <returns>m_oSystemHelper - Occurrence to the system helper object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetSystemChildHelper">
            <summary>
            Private utility method to get and manage the system child helper object.
            </summary>
            <returns>m_oSystemChildHelper - Occurrence to the system child helper object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetNameRuleHelper">
            <summary>
            Private utility method to get and manage the name rule helper object.
            </summary>
            <returns>m_oSystemChildHelper - Occurrence to the name rule helper object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.SetUserDefinedName(System.String)">
            <summary>
            Sets the name of an item.
            </summary>
            <param name="Name">The new name string.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetWBSHierarchyHelper">
            <summary>
            Gets the WBS hierarchy helper.
            </summary>
            <returns>WBSHierarchyHelper</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetNamedItemHelper">
            <summary>
            Private utility method to get and manage the named item helper object.
            </summary>
            <returns>m_oNamedItemHelper - Occurrence of the named item helper object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetRouteAPIHelper">
            <summary>
            Private utility method to get and manage the Route API helper object.
            </summary>
            <returns>m_oRouteAPIHelper - Occurrence to the Route API helper object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.RunType">
            <summary>
            Return a string that identifies the class of the Run, based on the
            identifying interface supported by the Run.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.SetActiveNameRule(System.String)">
            <summary>
            Sets the active name rule.
            </summary>
            <param name="strRuleName">String indicating the name rule to be used.  If this string
            is left blank, the first rule that is not user-defined will be used.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.CopyUserDefinedName(Ingr.SP3D.Route.Middle.RouteRun)">
            <summary>
            Copies the user-defined name of the reference run passed in.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteRun.GetFeatureAtLocation(Ingr.SP3D.Route.Middle.PathFeatureObjectTypes,Ingr.SP3D.Route.Middle.PathFeatureFunctions,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Gets a feature at a given location.
            </summary>        
            <param name="eReqFeatType">Required feature type.</param>
            <param name="eReqFeatFunction">Required feature function.</param>
            <param name="oAtPosition">Location at which the feature is expected.</param>
            <param name="oFeatPosition">Feature found at a given location.</param>
            <param name="oFeature">Feature returned at a given location.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteGetFeatureAtLocationException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to get a feature at a given location.
            <code>
            'Create a run.
            Dim oRouteRun As RouteRun = Nothing
            'Define a position at which the feature is needed.
            Dim oAtPosition As Position = Nothing
            'Declare oFeatPosition, oFeature.
            Dim oFeatPosition As Position = Nothing
            Dim oFeature As RouteFeature = Nothing
            'Using GetFeatureAtLocation(), get the feature at a given location ot position.
            oRouteRun.GetFeatureAtLocation(PathFeatureObjectTypes.PathFeatureType_STRAIGHT, _
                                              PathFeatureFunctions.PathFeatureFunction_ROUTE, _
                                              oAtPosition, oFeatPosition, oFeature)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.SystemChildren">
            <summary>
            Implementation of ISystem:SystemChildren using the system helper of
            CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.SystemParent">
            <summary>
            Implementation of ISystemChild:System parent property.  Uses the
            system helper of CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a run.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.Name">
            <summary>
            Gets the read-only name.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.WBSItemParents">
            <summary>
            Gets the collection of WBS parents of a run.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.Specification">
            <summary>
            Specification assigned to the run property.  
            </summary>
            <example>This example shows how to get and set the specification on a run.
            <code>
            'Create a run.
            Dim oRouteRun As RouteRun = Nothing
            'Get specification from run.
            Dim oSpecBase As SpecificationBase = Nothing
            oSpecBase = oRouteRun.Specification
            'Set specification on run. 
            Dim oBOSpec As SpecificationBase = Nothing
            oRouteRun.Specification = oBOSpec
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.Features">
            <summary>
            Gets the collection of features of a run.
            </summary>
            <example>This example shows how to get features from a run.
            <code>
            'Create a run.
            Dim oRouteRun As RouteRun = Nothing
            'Define ReadOnlyCollection of RouteFeatures.
            Dim oFeatures As ReadOnlyCollection(Of RouteFeature) = Nothing        
            'Using Features property, get the collection of features on run.
            oFeatures = oRouteRun.Features
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.Parts">
            <summary>
            Gets the collection of parts of a run.
            </summary>
            <example>This example shows how to get parts from a run.
            <code>
            'Create a run.
            Dim oRouteRun As RouteRun = Nothing
            'Define ReadOnlyCollection of route part.
            Dim oParts As ReadOnlyCollection(Of RoutePart) = Nothing        
            'Using Parts property, get the collection of parts on run.
            oParts = oRouteRun.Parts
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.RouteConnections">
            <summary>
            Returns a collection of route connection objects.
            </summary>
            <example> This example shows how to get the route connections on a run.
            <code>
            Dim oRouteRun As RouteRun = Nothing
            'Define ReadOnlyCollection of ConnectionBase objects.
            Dim oConnections As ReadOnlyCollection(Of ConnectionBase) = Nothing        
            'Using RouteConnections property, get the collection of connection objects on the run.
            oConnections = oRouteRun.RouteConnections
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteRun.Range">
            <summary>
            Gets the read-only range box of the run.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetFeatures">
            <summary>
            Unexpected error in getting features.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetFeatures.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToGetFeatures 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetFeatures.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToGetFeatures class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetParts">
            <summary>
            Unexpected error in getting parts.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetParts.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToGetParts 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetParts.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToGetParts class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException">
            <summary>
            Invalid specification exception.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException.#ctor">
            <summary>
            Initializes a new instance of the RteInvalidSpecException class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInvalidSpecException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetAllowableSpecs">
            <summary>
            Failed to get allowable specifications from the system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetAllowableSpecs.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToGetAllowableSpecs class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetAllowableSpecs.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToGetAllowableSpecs class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">
            <summary>
            This exception is thrown when the Run object creation fails.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException.#ctor">
            <summary>
            Initializes a new instance of the FailedToCreateRunException class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the FailedToCreateRunException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the FailedToCreateRunException class
            with a reference to the inner Exception that is the cause of this exception.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the FailedToCreateRunException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitComponent">
            <summary>
            ConduitComponent is the .NET wrapper class for Conduit Component occurence objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitComponent.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitComponent base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitComponent.#ctor">
            <summary>
            Internal constructor for the ConduitComponent base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitComponent.Finalize">
            <summary>
            Destructor for the ConduitComponent base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.TurnFeature">
            <summary>
             TurnFeature Class is the base class from which all turn features (Pipe/HVAC/Cableway) are derived.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the TurnFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.#ctor">
            <summary>
            Public constructor for the TurnFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.Finalize">
            <summary>
            Destructor for the TurnFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Not implemented.
            </summary>
            <param name="pos"></param>
            <param name="vecProj"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.PointAtDistanceAlong(System.Double)">
            <summary>
            Not implemented.
            </summary>
            <param name="dist"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            
            </summary>
            <param name="posStart"></param>
            <param name="dist"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Find the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of the curve.</param>
            <param name="vecNormal">The normal vector of the curve.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>Planar = 1</term>
                   <description>Normal returned, if curve is closed; then this is an oriented normal.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>A normal returned.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Least squares normal returned.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.ScopeN(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity, and if planar, return the normal for this turn feature.
            </summary>
            <param name="eScope">Enum which shows the planarity of the turn feature.</param>
            <param name="vecNormal">The normal vector of the turn feature.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Not implemented.
            </summary>
            <param name="dArea"></param>
            <param name="posCentroid"></param>
            <param name="dInteriaX"></param>
            <param name="dInertiaY"></param>
            <param name="dInertiaXY"></param>
            <param name="dMajorPrncplInertia"></param>
            <param name="dMinorPrncplInertia"></param>
            <param name="dPolarInertia"></param>
            <param name="MjIAxis"></param>
            <param name="MnIAxis"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of the turn feature.
            </summary>
            <param name="posStart">Starting point of turn feature.</param>
            <param name="posEnd">End point of turn feature.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether a given point is on the turn feature.
            </summary>
            <param name="pos">Point to determine whether on this turn feature.</param>
            <returns>If True, then the point is on the turn feature; If False, then the point is not on the turn feature.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this turn feature and the input point.
            </summary>
            <param name="oPoint3d">Input point.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this turn feature at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">oPoint3d cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInCurve"></param>
            <param name="dDist"></param>
            <param name="posSrcPos"></param>
            <param name="posInPos"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInSurf"></param>
            <param name="dDist"></param>
            <param name="posSrcPos"></param>
            <param name="posInPos"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInCurve"></param>
            <param name="colIntPos"></param>
            <param name="colOverlapPos"></param>
            <param name="eIntersectCode"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Not implemented.
            </summary>
            <param name="oInObj"></param>
            <param name="colCurves"></param>
            <param name="eIntersectCode"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.TurnFeature.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Not implemented.
            </summary>
            <param name="colIntPos"></param>
            <param name="colOverlapPos"></param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TurnFeature.Length">
            <summary>
            Finds the length of this turn feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TurnFeature.Area">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TurnFeature.Form">
            <summary>
            Finds the closure of this turn feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TurnFeature.Scope">
            <summary>
            Finds the planarity of this turn feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.TurnFeature.Centroid">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeComponent">
            <summary>
            PipeComponent is the .NET wrapper class for PipeComponent object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeComponent.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeComponent base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeComponent.#ctor">
            <summary>
            Public constructor for the PipeComponent base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeComponent.Finalize">
            <summary>
            Destructor for the PipeComponent base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeBranchFeature">
            <summary>
             PipeBranchFeature class is the .NET wrapper class representing a PipeBranchFeature object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.BranchFeature">
            <summary>
             BranchFeature Class is the base class from which all BranchFeatures (Pipe/Hvac/Cableway) are derived.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.BranchFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the BranchFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.BranchFeature.#ctor">
            <summary>
            Public constructor for the BranchFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.BranchFeature.Finalize">
            <summary>
            Destructor for the BranchFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBranchFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeBranchFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBranchFeature.#ctor">
            <summary>
            Public constructor for the PipeBranchFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBranchFeature.Finalize">
            <summary>
            Destructor for the PipeBranchFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBranchFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the insulation specification on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBranchFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. Passed in insulation temperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeBranchFeature.ShortCode">
            <summary>
            Gets or sets the short code of the feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeBranchFeature.InsulationSpec">
            <summary>
             Gets the insulation specification property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctSurfaceMountFeature">
            <summary>
            Wrapper class for DuctSurfaceMount feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSurfaceMountFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctSurfaceMountFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSurfaceMountFeature.#ctor">
            <summary>
            Public constructor for the DuctSurfaceMountFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSurfaceMountFeature.Finalize">
            <summary>
            Destructor for the DuctSurfaceMountFeature base class
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctAlongLegTransitionFeature">
            <summary>
            Wrapper class for Route class DuctAlongLegTransitionFeature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctAlongLegTransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctAlongLegTransitionFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctAlongLegTransitionFeature.#ctor">
            <summary>
            Public constructor for the DuctAlongLegTransitionFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctAlongLegTransitionFeature.Finalize">
            <summary>
            Destructor for the DuctAlongLegTransitionFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayAlongLegTransitionFeature">
            <summary>
            Wrapper class for Route class CablewayAlongLegTransitionFeature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayAlongLegTransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayAlongLegTransitionFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayAlongLegTransitionFeature.#ctor">
            <summary>
            Public constructor for the CablewayAlongLegTransitionFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayAlongLegTransitionFeature.Finalize">
            <summary>
            Destructor for the CablewayAlongLegTransitionFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.Services.RteResourceIDs">
            <summary>
            Summary description for RteResourceIDs
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToSetInsulationSpecException">
            <summary>
             This exception is thrown when there is an Unexpected Failure in SetInsulationSpec mehtod.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetInsulationThickness">
            <summary>
             This exception is thrown when there is no InsulationThickness defined for the Insulation temperature defined on the Run.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteCannotConvertBasePartToMatingPart">
            <summary>
             This exception is thrown when the User tries to change a BasePart to a Mating part as this is not allowed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToConvertMatingPartToBasePart">
            <summary>
            UnexpectedError while converting MatingPart to BasePart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetFeatureFromPart">
            <summary>
            Failed to get the Feature associated with the part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetRangeException">
            <summary>
            Unexpected Error in (get)Range.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetFeatures">
            <summary>
            UnExpected failure in (get)Features.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.FailedToCreatePipeRunException">
            <summary>
            UnExpected failure during creation of a PipeRun object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.FailedToAssignSpecException">
            <summary>
            Unexpected Failure while associating a Spec object to a Run.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidShortCode">
            <summary>
            Exception thrown when there is no Feature Type defined for the ShortCode. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToRemoveInsulationSpec">
            <summary>
            Failed to Remove InsulationSpec.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToSetInsulationTemperature">
            <summary>
            Failed to Set InsulationTemperature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedInNominalDiameter">
            <summary>
            Failed to get/set NominalDiameter on the Run.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedInInsulationSpec">
            <summary>
            Failed in InsulationSpec Property.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedInSpecification">
            <summary>
            Failed in Specification Property.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidObjectType">
            <summary>
            Passed in Object does not support the required Interface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenPortAndPortException">
            <summary>
            UnExpected Failure in RouteBetweenPortAndPort method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenPortAndBranchException">
            <summary>
            UnExpected Failure in RouteBetweenPortAndBranch method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenPortAndPointException">
            <summary>
            UnExpected Failure in RouteBetweenPortAndPoint method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenPortAndEndFeatureException">
            <summary>
            UnExpected Failure in RouteBetweenPortAndEndFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenBranchAndBranchException">
            <summary>
            UnExpected Failure in RouteBetweenBranchAndBranch method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenBranchAndPointException">
            <summary>
            UnExpected Failure in RouteBetweenBranchAndPoint method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenBranchAndEndFeatureException">
            <summary>
            UnExpected Failure in RouteBetweenBranchAndEndFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenEndFeatureAndPointException">
            <summary>
            UnExpected Failure in RouteBetweenPointAndEndFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenPointAndPointException">
            <summary>
            UnExpected Failure in RouteBetweenPointAndPoint method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteRouteBetweenEndFeatureAndEndFeatureException">
            <summary>
            UnExpected Failure in RouteBetweenEndFeatureAndEndFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteGetFeatureAtLocationException">
            <summary>
            UnExpected Failure in GetFeatureAtLocation method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertFeatureByShortCodeOnFeatureException">
            <summary>
            UnExpected Failure in InsertFeatureByShortCodeOnFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertFeatureByShortCodeOnPortException">
            <summary>
            UnExpected Failure in InsertFeatureByShortCodeOnPort method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertFeatureByPartOnFeatureException">
            <summary>
            UnExpected Failure in InsertFeatureByPartOnFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertFeatureByPartOnPortException">
            <summary>
            UnExpected Failure in InsertFeatureByPartOnPort method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertFeatureByTagOnFeatureException">
            <summary>
            UnExpected Failure in InsertFeatureByTagOnFeature method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertFeatureByTagOnPortException">
            <summary>
            UnExpected Failure in InsertFeatureByTagOnPort method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertSplitFeatureException">
            <summary>
            UnExpected Failure in InsertSplitFeature method.
            </summary> 
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteSetUserDefinedInsulationException">
            <summary>
            UnExpected Failure in SetUserDefinedInsulation method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteIncorrectPurposeCodeException">
            <summary>
            UnExpected Failure in RteIncorrectPurposeCodeException method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteIncorrectMaterialCodeException">
            <summary>
            UnExpected Failure in RteIncorrectMaterialCodeException method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetParts">
            <summary>
            UnExpected failure in (get)Parts.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToCreatePipeTapFeature">
            <summary>
            UnExpected failure during creation of a PipeTapFeature object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidTapNumber">
            <summary>
            The passed in Tap Number is not defined in the catalog for the spec of the Feature to be tapped.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidTapDirection">
            <summary>
             Tap direction cannot be parallel if the feature is not a Turn or an End Leg component. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidSpecException">
            <summary>
             Invalid Specification, No specification exists for the given Spec Name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidParentException">
            <summary>
             Invalid Parent Exception
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToCreateRunException">
            <summary>
             Failed to create Run Exception
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetAllowableSpecs">
            <summary>
             Failed to GetAllowableSpecs Exception
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteStartLocationException">
            <summary>
            Failed to get Start location.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteEndLocationException">
            <summary>
            Failed to get End Location.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.DEFAULT_RESOURCE">
            <summary>
            Route localizer Resource.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.DEFAULT_ASSEMBLY">
            <summary>
            Route localizer Assembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToGetMaterial">
            <summary>
            Failed to get the material on the given HVAC specification.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToInsertSlantedTransOnEndFeat">
            <summary>
            Failed to insert slanted transition on end feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidTransitionCrossSection">
            <summary>
            Transition cross section and selected end feature cross section are same.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertStraightTransitionOnEndFeature">
            <summary>
            Failed to insert straight transition on end feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToInsertSlantedTransOnPort">
            <summary>
            Failed to insert slanted transition on port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedInsertStraightTransitionOnPort">
            <summary>
            Failed to insert straight transition on port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertTurnTransitionOnEndFeatureException">
            <summary>
            Failed to insert turn transition on end feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInsertTurnTransitionOnPortException">
            <summary>
            Failed to insert turn transition on given port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteFailedToCreateCablerunException">
            <summary>
            Failed to create cable run.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteMoreThanOnePlateException">
            <summary>
            The number of Penetration Parts connected to a pipe is greater than one. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RtePlateNotConnectedToPipeException">
            <summary>
            No connection exists between the Penetration Part and the Pipe.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteInvalidSpoolingTypeException">
            <summary>
            wrong combination of Spoolable Object and SpoolingType.   
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteNoSubSpoolsException">
            <summary>
            Number of sub spools created is zero.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.Services.RteResourceIDs.RteEmptySpoolableObjectException">
            <summary>
            The passed in Spoolable Object has no parts under it.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.RouteAPIHelper">
            <summary>
            RouteAPIHelper helper class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IRouteAPI">
            <summary>
            Properties and methods common to all path runs.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for RouteAPIHelper class.
            </summary>
            <param name="oRouteObject">Pointer to the route business object to be saved
            for use by the methods of this helper class.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.Finalize">
            <summary>
            Destructor for RouteAPIHelper class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenPortAndPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Equipment.Middle.DistributionPort)">
            <summary>
            Routes from a port on the current run to a port on another run.
            </summary>
            <param name="oFromPort">Port on the current run.</param>
            <param name="oToPort">Port on another run.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenPortAndBranch(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Routes from a port on the current run and a branch on another run.
            </summary>
            <param name="oPort">Port on the current run.</param>
            <param name="oPipeStraightFeature">Pipe straight feature at destination.</param>
            <param name="oBranchPosition">Position of branch on destination straight feature.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
             is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenPortAndPoint(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes from a port on the current run to a point.
            </summary>
            <param name="oPort">Port on the current run.</param>
            <param name="oPosition">Destination point.</param>
            <param name="oPipeEndFeature">Pipe end feature created at the destination point.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenPortAndEndFeature(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.PipeEndFeature)">
            <summary>
            Routes from a port on the current run to an end feature on another run.
            </summary>
            <param name="oPort">Port on the current run.</param>
            <param name="oPipeEndFeature">Destination end feature on another run.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
             is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenBranchAndBranch(Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Routes between a branch on the current run to a branch on another run.
            </summary>
            <param name="oFromPipeStraightFeature">The straight feature on the current run
            that will be branched.</param>
            <param name="oBranchFromPosition">The location at which the branch on the current run
            will be created.</param>
            <param name="oToPipeStraightFeature">The destination straight feature.</param>
            <param name="oBranchToPosition">The location at which to create the branch on
            the destination straight feature.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenBranchAndPoint(Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes between a branch on the current run and a point.
            </summary>
            <param name="oPipeStraightFeature">The straight feature on the current run that will
            be branched.</param>
            <param name="oBranchPosition">The location at which the branch on the current run will
            be created.</param>
            <param name="oPosition">The destination position.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <param name="oPipeEndFeature">The end feature created at the end of the new branch.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenBranchAndEndFeature(Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature)">
            <summary>
            Routes between a branch and an end feature on another run.
            </summary>
            <param name="oPipeStraightFeature">The straight feature on the current run that will
            be branched.</param>
            <param name="oBranchPosition">The location at which the branch on the current run will
            be created.</param>
            <param name="oPipeEndFeature">The end feature to which the new branch will be routed.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenEndFeatureAndPoint(Ingr.SP3D.Route.Middle.PipeEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes from an end feature on the current run to a point.
            </summary>        
            <param name="oPipeEndFeature">Pipe end feature at which the leg is to start.</param>
            <param name="oPosition">Position at which the leg is to end.</param>
            <param name="oNewPipeEndFeature">Newly created pipe end feature at passed in position.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenPointAndPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes from a point on the current run to another point.
            </summary>
            <param name="oFromPosition">The point on the current run from which the leg is to start.</param>
            <param name="oToPosition">The point to which the leg is to be routed.</param>
            <param name="oPipeEndFeature">The new end feature at the end of the new leg.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.RouteBetweenEndFeatureAndEndFeature(Ingr.SP3D.Route.Middle.PipeEndFeature,Ingr.SP3D.Route.Middle.PipeEndFeature)">
            <summary>
            Routes from an end feature on the current run to an end feature on another run.
            </summary>
            <param name="oFromPipeEndFeature">End feature on the current run from which the leg
            is to start.</param>
            <param name="oToPipeEndFeature">End feature on another run to which the leg is to
            be routed.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertFeatureByShortCodeOnFeature(System.String,System.Int32,System.String,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature identified by its short code.
            </summary>
            <param name="sShortCode">Short code that identifies the feature to be inserted.</param>
            <param name="iOptionCode">Option code that further identifies the feature to be inserted.</param>
            <param name="sMultiSize">Multi-size string that further identifies multi-size feature to be inserted.</param>
            <param name="oInsertOnFeature">Target feature onto which feature is being inserted.</param>
            <param name="oInsertAtPos">Insertion position.</param>
            <param name="oSecondaryRun">Input: Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertFeatureByShortCodeOnPort(System.String,System.Int32,System.String,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a port. The feature is identified by its short code.
            </summary>
            <param name="sShortCode">Short code that identifies the feature to be inserted.</param>
            <param name="iOptionCode">Option code that further identifies the feature to be inserted.</param>
            <param name="sMultiSize">Multi-size string that further identifies the multi-size feature to be inserted.</param>
            <param name="oInsertOnPort">Port onto which the feature is to be inserted.</param>
            <param name="oSecondaryRun">Input: Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertFeatureByPartOnFeature(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on another feature.  The feature to be inserted is
            identified by its catalog part.
            </summary>
            <param name="oCatalogPart">Catalog name of the part being inserted.</param>
            <param name="oInsertOnFeature">Target feature onto which the feature is to be inserted.</param>
            <param name="oInsertAtPos">Insertion position.</param>
            <param name="oSecondaryRun">Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is an business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertFeatureByPartOnPort(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a port.  The feature is identified by its catalog part.
            </summary>
            <param name="oCatalogPart">Catalog name of the part being inserted.</param>
            <param name="oInsertOnPort">Port onto which the feature is to be inserted.</param>
            <param name="oSecondaryRun">Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is an business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertFeatureByTagOnFeature(System.String,System.String,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on another feature.  The feature to be inserted is
            identified by its tag.
            </summary>
            <param name="sTag">Tag that identifies feature to be inserted.</param>
            <param name="sMultiSize">Multi-size string that further identifies the multi-size feature to be inserted.</param>
            <param name="oInsertOnFeature">Target feature onto which feature is being inserted.</param>
            <param name="oInsertAtPos">Insertion position.</param>
            <param name="oSecondaryRun">Input: Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertFeatureByTagOnPort(System.String,System.String,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a port.  The feature to be inserted is identified by
            its tag.
            </summary>
            <param name="sTag">Tag that identifies the feature to be inserted.</param>
            <param name="sMultiSize">Multi-size string that further identifies the multi-size feature to be inserted.</param>
            <param name="oInsertOnPort">Port onto which the feature is to be inserted.</param>
            <param name="oSecondaryRun">Input: Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsertSplitFeature(System.String,System.Int32,Ingr.SP3D.Route.Middle.SplitTypes,Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a split feature.
            </summary>
            <param name="sShortCode">Short code that identifies the split feature to be inserted.</param>
            <param name="iOptionCode">Option code that further identifies the split feature to be inserted.</param>
            <param name="eSplitType">Split type.</param>
            <param name="oInsertOnObj">Object onto which the feature is to be inserted.</param>
            <param name="oInsertAtPos">Insertion position.</param>
            <param name="oInsertedFeature">Output: Feature that was inserted.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertSplitFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.RouteAPIHelper.InsulationSpec">
            <summary>
            Gets the insulation specification assigned to the run property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenPortAndPort method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndPortException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndPortException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenPortAndBranch method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndBranchException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndBranchException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPointException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenPortAndPoint method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPointException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndPointException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPointException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndPointException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenPortAndEndFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndEndFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenPortAndEndFeatureException class. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenBranchAndBranch method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenBranchAndBranchException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenBranchAndBranchException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenBranchAndPoint method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenBranchAndPointException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenBranchAndPointException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenBranchAndFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenBranchAndEndFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenBranchAndEndFeatureException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenPointAndEndFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenEndFeatureAndPointException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenEndFeatureAndPointException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenPointAndPoint method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenPointAndPointException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenPointAndPointException class .
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            RouteBetweenEndFeatureAndEndFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteRouteBetweenEndFeatureAndEndFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteRouteBetweenEndFeatureAndEndFeatureException class .
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteGetFeatureAtLocationException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            GetFeatureAtLocation method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteGetFeatureAtLocationException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteGetFeatureAtLocationException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteGetFeatureAtLocationException.#ctor">
            <summary>
            Initializes a new instance of the RteGetFeatureAtLocationException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertFeatureByShortCodeOnFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByShortCodeOnFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByShortCodeOnFeatureException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertFeatureByShortCodeOnFeatureException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertFeatureByShortCodeOnPort method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByShortCodeOnPortException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByShortCodeOnPortException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertFeatureByShortCodeOnPortException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertFeatureByPartOnFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByPartOnFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByPartOnFeatureException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertFeatureByPartOnFeatureException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertFeatureByPartOnPort method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByPartOnPortException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByPartOnPortException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertFeatureByPartOnPortException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertFeatureByTagOnFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByTagOnFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnFeatureException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByTagOnFeatureException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertFeatureByTagOnFeatureException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnPortException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertFeatureByTagOnPort method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByTagOnPortException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnPortException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertFeatureByTagOnPortException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnPortException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertFeatureByTagOnPortException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertSplitFeatureException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            InsertSplitFeature method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSplitFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertSplitFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSplitFeatureException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertSplitFeatureException 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSplitFeatureException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertSplitFeatureException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteSetUserDefinedInsulationException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            SetUserDefinedInsulation method of the Route API.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteSetUserDefinedInsulationException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteSetUserDefinedInsulationException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteSetUserDefinedInsulationException.#ctor">
            <summary>
            Initializes a new instance of the RteSetUserDefinedInsulationException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteIncorrectPurposeCodeException">
            <summary>
            This exception is thrown when SetUserDefinedInsulation is called with a purpose
            code that is not found in the InsulationPurpose codelist.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteIncorrectPurposeCodeException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteIncorrectPurposeCodeException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteIncorrectPurposeCodeException.#ctor">
            <summary>
            Initializes a new instance of the RteIncorrectPurposeCodeException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteIncorrectMaterialCodeException">
            <summary>
            This exception is thrown when SetUserDefinedInsulation is called with a material
            code that is not found in the InsulatinMaterial codelist.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteIncorrectMaterialCodeException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteIncorrectMaterialCodeException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteIncorrectMaterialCodeException.#ctor">
            <summary>
            Initializes a new instance of the RteIncorrectMaterialCodeException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedInInsulationSpec">
            <summary>
            This exception is thrown when an Unexpected failure occurs in InsulationSpec property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedInInsulationSpec.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedInInsulationSpec 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedInInsulationSpec.#ctor">
            <summary>
            Initializes a new instance of the RteFailedInInsulationSpec class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedInSpecification">
            <summary>
            This exception is thrown when an Unexpected failure occurs in Specification property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedInSpecification.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedInSpecification 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedInSpecification.#ctor">
            <summary>
            Initializes a new instance of the RteFailedInSpecification class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidObjectType">
            <summary>
            The Object passed in does not support the required Interface.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidObjectType.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInvalidObjectType 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidObjectType.#ctor">
            <summary>
            Initializes a new instance of the RteInvalidObjectType class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetRangeException">
            <summary>
            Unexpected Error in (get)Range.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetRangeException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToGetRangeException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetRangeException.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToGetRangeException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteStartLocationException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            StartLocation Property of route feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteStartLocationException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteStartLocationException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteStartLocationException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteStartLocationException class with an Exception.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteStartLocationException.#ctor">
            <summary>
            Initializes a new instance of the RteStartLocationException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteEndLocationException">
            <summary>
            This exception is thrown when an unexpected error occurs in the
            EndLocation Property of route feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteEndLocationException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteEndLocationException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteEndLocationException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteEndLocationException class with an Exception.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteEndLocationException.#ctor">
            <summary>
            Initializes a new instance of the RteEndLocationException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetMaterial">
            <summary>
             This exception is thrown when getting a material on the given specification fails. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetMaterial.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToGetMaterial 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetMaterial.#ctor">
            <summary>
            Initializes a new instance of the RteEndLocationException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnEndFeatException">
            <summary>
            This exception is thrown when insert slanted transition on end feature is failed
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnEndFeatException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertSlantedTransitionOnEndFeatException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnEndFeatException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertSlantedTransitionOnEndFeatException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature">
            <summary>
            This exception is thrown when unexpected failured occurs in 'RteInsertStraightTransitionOnEndFeature' method.
            </summary> 
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertStraightTransitionOnEndFeature 
            class with a reference to the inner COMException that is the cause of this exception.            
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertStraightTransitionOnEndFeature class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">
            <summary>
            This exception is thrown when passed in cross section and cross section passed in end feature or port are same.
            </summary> 
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection.#ctor">
            <summary>
            Initializes a new instance of the RteInvalidTransitionCrossSection class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnPortException">
            <summary>
            This exception is thrown when insert slanted transition on port is failed
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertSlantedTransitionOnPortException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnPortException.#ctor">
            <summary>
            Initializes a new instance of the RteInsertSlantedTransitionOnPortException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnPortException">
            <summary>
            This exception is thrown when unexpected failured occurs in 'RteInsertStraightTransitionOnEndFeature' method.
            </summary> 
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertStraightTransitionOnPort 
            class with a reference to the inner COMException that is the cause of this exception.            
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnPortException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertStraightTransitionOnPort class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnEndFeatureException">
            <summary>
            This exception is thrown when unexpected failured occurs in RteInsertTurnTransitionOnEndFeatureException method.
            </summary> 
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnEndFeatureException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertTurnTransitionOnEndFeatureException 
            class with a reference to the inner COMException that is the cause of this exception.            
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnEndFeatureException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertTurnTransitionOnEndFeatureException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnPortException">
            <summary>
            This exception is thrown when unexpected failured occurs in RteInsertTurnTransitionOnPortException method.
            </summary> 
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnPortException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInsertTurnTransitionOnPortException 
            class with a reference to the inner COMException that is the cause of this exception.            
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnPortException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteInsertTurnTransitionOnPortException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedtoCreateCableRunException">
            <summary>
            This exception is thrown when unexpected failured occurs in RteFailedtoCreateCableRunException method.
            </summary>     
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedtoCreateCableRunException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedtoCreateCableRunException 
            class with a reference to the inner COMException that is the cause of this exception.            
            </summary>
            <param name="oCOMException">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedtoCreateCableRunException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteFailedtoCreateCableRunException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeRun">
            <summary>
            PipeRun is the .NET wrapper class for pipe run objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for pipe runs.
            </summary>
            <param name="oBOP">PrivateBusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.#ctor(Ingr.SP3D.Systems.Middle.Pipeline,System.Double,System.String,Ingr.SP3D.ReferenceData.Middle.PipeSpec)">
            <summary>
            Constructor for the pipe run wrapper class.
            Users are adviced to use the other constructor method which takes in NominalDiamter as input rather than this constructor. 
            </summary>
            <param name="oPipelineSystem">Parent pipeline system.</param>
            <param name="dNPD">Nominal pipe diameter of new pipe run.</param>
            <param name="sNPDUnitType">Nominal pipe diameter unit type of new pipe run.</param>
            <param name="oPipeSpec">Piping specification of new pipe run.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Argument passed is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Argument does not support the required interface.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreatePipeRunException">Failed to create the pipe run.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException">Failed to assign the specification.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.#ctor(Ingr.SP3D.Route.Middle.PipeRun)">
            <summary>
            Pipe run copy constructor.
            </summary>
            <param name="oPipeRun">Piperun object.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreatePipeRunException">Unexpected error in the pipe run constructor.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.#ctor(Ingr.SP3D.Systems.Middle.Pipeline,System.Double,System.String,System.String)">
            <summary>
            Public constructor for the pipe run wrapper class.
            </summary>
            <param name="oPipelineSystem">Parent of the new pipe run.</param>
            <param name="dNPDSize">Nominal diameter size of the new pipe run.</param>
            <param name="sNPDUnits">Nominal diameter unit type of new pipe run.</param>
            <param name="sPipeSpecName">Name of the pipe specification for the new pipe run.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Argument passed in is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Argument does not support the required interface.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException">No specification exists for the given specification name.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreatePipeRunException">Failed to create the pipe run.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException">Failed to assign the specification.</exception>       
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.#ctor(Ingr.SP3D.Systems.Middle.Pipeline,Ingr.SP3D.Common.Middle.Services.NominalDiameter,Ingr.SP3D.ReferenceData.Middle.PipeSpec)">
            <summary>
            Public constructor for the pipe run wrapper class.
            </summary>
            <param name="oPipelineSystem">Parent of the new pipe run.</param>
            <param name="oNominalDiameter">Nominal diameter of new pipe run.</param>
            <param name="oPipeSpec">Piping specification of new pipe run.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Argument passed is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Argument does not support the required interface.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreatePipeRunException">Failed to create the pipe run.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException">Failed to assign the specification.</exception>
            <example>This example shows how to create Pipe run for a given NPD and Pipe Spec.
            <code>
            'Create the Pipe run.
            Dim oPipeRun As PipeRun
            'Create Nominal Diameter and define its Size and Units properties of the Pipe run to be placed.
            Dim oNPD As New NominalDiameter
            oNPD.Size=8
            oNPD.Units="in"
            'Define Pipeline system under which the Pipe run has to be created.
            Dim oPipeline As Pipeline = Nothing 'Need to create the Pipeline
            'Define Pipe spec for the Pipe run to be created
            Dim oPipeSpec As Pipespec = Nothing ' Need to get the required pipe spec from the list of allowable specs.
            'Call PipeRun Constructor which takes System parent, NPD, and Pipe spec as arguments to create Pipe run.
            oPipeRun = New PipeRun(oPipeline, oNPD, oPipeSpec)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.Finalize">
            <summary>
            Destructor for the PipeRun wrapper class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.CreatePipeRun(Ingr.SP3D.Systems.Middle.Pipeline,System.Double,System.String,Ingr.SP3D.ReferenceData.Middle.PipeSpec)">
            <summary>
            Creates a new PipeRun
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.SetUserDefinedInsulation(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Sets the user-defined insulation.
            </summary>
            <param name="iPurpose">Purpose of the insulation.</param>
            <param name="iMaterial">Insulation material.</param>
            <param name="dThickness">Thickness of insulation.</param>
            <param name="dTemperature">Temperature rating of the insulation.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is an business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteSetUserDefinedInsulationException">An 
            unexpected error occurred.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteIncorrectPurposeCodeException">The lPurpose
            argument is a value that is not in the InsulationPurpose codelist.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteIncorrectMaterialCodeException">The lMaterial
            argument is a value that is not in the InsulationMaterial codelist.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Assigns the insulation specification to the run. This method validates the insulation temperature on the run  
            before setting the insulation specification.
            </summary>
            <param name="PipeInsulationSpec">Pipe insulation specification object to set.</param>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToRemoveInsulationSpec">Failed to remove insulation specification on the run.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetInsulationThickness">Failed to get insulation thickness information based on the pipe run nominal pipe diameter and temperature.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationSpecException">Failed to remove the insulation specifcation.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the run. This method validates the insulation temperature before setting on the run.
            </summary>
            <param name="PipeInsulationSpec">Pipe insulation specification object.</param>
            <param name="InsulationTemperature">Pipe insulation temperature.</param>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToRemoveInsulationSpec">Failed to remove the insulation specification on the run.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetInsulationThickness">Failed to get insulation thickness information based on the pipe run nominal pipe diameter and temperature.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationSpecException">Failed to remove the insulation specifcation.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertSplitFeature(System.String,System.Int32,Ingr.SP3D.Route.Middle.SplitTypes,Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>        
            Inserts a split feature.        
            </summary>
            <param name="sShortCode">Short code of the feature.</param>
            <param name="iOptionCode">Option code of the feature.</param>
            <param name="eSplitType">Split type.</param>
            <param name="oInsertOnObj">The object on which the split feature must be inserted.</param>
            <param name="oInsertAtPos">The location at which spilt feature must be inserted.</param>
            <param name="oInsertedFeature">The inserted split feature.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertSplitFeatureException">An
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertFeatureByShortCodeOnFeature(System.String,System.Int32,System.String,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature identified by its short code.
            </summary>        
            <param name="sShortCode">Short code of the feature.</param>
            <param name="iOptionCode">Option code of the feature.</param>
            <param name="sMultiSize">Size of the feature to be inserted from the available multiple sizes.</param>
            <param name="oInsertOnFeature">Feature on which a feature must be inserted.</param>
            <param name="oInsertAtPos">The location at which the feature must be inserted.</param>
            <param name="oSecondaryRun">Secondary run.</param>
            <param name="oInsertedFeature">The inserted feature.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertFeatureByShortCodeOnPort(System.String,System.Int32,System.String,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a port.  The feature is identified by its short code.        
            </summary>
            <param name="sShortCode">Short code of the feature.</param>
            <param name="iOptionCode">Option code of the feature.</param>
            <param name="sMultiSize">Size of the feature to be inserted from the available multiple sizes.</param>
            <param name="oInsertOnPort">Port on which a feature must be inserted.</param>
            <param name="oSecondaryRun">Secondary run.</param>
            <param name="oInsertedFeature">The inserted feature.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertFeatureByPartOnFeature(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on another feature.  The feature to be inserted is
            identified by its catalog part.
            </summary>
            <param name="oCatalogPart">Catalog part.</param>
            <param name="oInsertOnFeature">Feature on which to insert a feature.</param>
            <param name="oInsertAtPos">Inserting feature position.</param>
            <param name="oSecondaryRun">New run for run change components.</param>
            <param name="oInsertedFeature">Inserted feature.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertFeatureByPartOnPort(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a port.  The feature is identified by its catalog part.
            </summary>
            <param name="oCatalogPart">Catalog part.</param>
            <param name="oInsertOnPort">Distribution port on which to insert the feature.</param>
            <param name="oSecondaryRun">New piperun for run change components.</param>
            <param name="oInsertedFeature">Inserted feature.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertFeatureByTagOnFeature(System.String,System.String,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on another feature.  The feature to be inserted is
            identified by its tag.
            </summary>
            <param name="sTag">Tag indicating inserting feature.</param>
            <param name="sMultiSize">Size of the feature to be inserted from the available multiple sizes.</param>
            <param name="oInsertOnFeature">Feature on which to insert feature.</param>
            <param name="oInsertAtPos">Inserting feature position.</param>
            <param name="oSecondaryRun">New run for run change components.</param>
            <param name="oInsertedFeature">Inserted feature.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.InsertFeatureByTagOnPort(System.String,System.String,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>        
            Inserts a feature on a port.  The feature to be inserted is identified by its tag.        
            </summary>
            <param name="sTag">Tag indicating inserting feature.</param>
            <param name="sMultiSize">Size of the feature to be inserted from the available multiple sizes.</param>
            <param name="oInsertOnPort">Port on which a feature must be inserted.</param>
            <param name="oSecondaryRun">New run for run change components.</param>
            <param name="oInsertedFeature">Inserted feature.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is null or is a business object of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByTagOnPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenPortAndPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Equipment.Middle.DistributionPort)">
            <summary>
            Routes from a port on the current run to a port on another run.
            </summary>
            <param name="oFromPort">Port on the current run.</param>
            <param name="oToPort">Port on another run.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenPortAndBranch(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Routes between a port and branch feature.
            </summary>
            <param name="oPort">Distribution port.</param>
            <param name="oPipeStraightFeature">Pipe straight feature on which to create the branch.</param>
            <param name="oBranchPosition">Position on the pipe straight feature.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
             is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenPortAndPoint(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes the pipe from the given port to the given point.
            </summary>
            <param name="oPort">Pipe port.</param>
            <param name="oPosition">Point</param>
            <param name="oPipeEndFeature">Returns the pipe end path feature.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenPortAndEndFeature(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.PipeEndFeature)">
            <summary>
            Routes from a port to an end feature.
            </summary>
            <param name="oPort">Port on the current run.</param>
            <param name="oPipeEndFeature">Destination end feature on another run.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
             is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenBranchAndBranch(Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Routes between two branch features.
            </summary>
            <param name="oFromPipeStraightFeature">Pipe straight feature on which to branch out.</param>
            <param name="oBranchFromPosition">The start position from the pipe straight feature.</param>
            <param name="oToPipeStraightFeature">Pipe straight feature on which to branch in.</param>
            <param name="oBranchToPosition">Position at the end position.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenBranchAndPoint(Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes from branch to a point.
            </summary>
            <param name="oPipeStraightFeature">Pipe straight feature on which to branch out.</param>
            <param name="oBranchPosition">Branch position from the pipe straight feature.</param>
            <param name="oPosition">Position at which the leg is to start.</param>
            <param name="oPipeEndFeature">The new pipe end feature at the end of the new leg.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenBranchAndEndFeature(Ingr.SP3D.Route.Middle.PipeStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature)">
            <summary>
            Routes from the branch to end feature.
            </summary>
            <param name="oPipeStraightFeature">Pipe straight feature on which to branch out.</param>
            <param name="oBranchPosition">Branch position from the pipe straight feature.</param>
            <param name="oPipeEndFeature">Pipe end feature at which we are routing.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenEndFeatureAndPoint(Ingr.SP3D.Route.Middle.PipeEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes from an end feature on the current run to a point.
            </summary>
            <param name="oPipeEndFeature">End feature on the current run at which the leg is to end.</param>
            <param name="oPosition">Position at which the leg is to start.</param>
            <param name="oNewPipeEndFeature">Newly created end feature at given position.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenPointAndPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.PipeEndFeature@)">
            <summary>
            Routes from a point on the current run to another point.
            </summary>
            <param name="oFromPosition">The point on the current run from which the leg is to start.</param>
            <param name="oToPosition">The point to which the leg is to be routed.</param>
            <param name="oPipeEndFeature">The new end feature at the end of the new leg.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeRun.RouteBetweenEndFeatureAndEndFeature(Ingr.SP3D.Route.Middle.PipeEndFeature,Ingr.SP3D.Route.Middle.PipeEndFeature)">
            <summary>
            Routes between two end features.
            </summary>
            <param name="oFromPipeEndFeature">End feature on the current run at which the leg is to start.</param>
            <param name="oToPipeEndFeature">End feature on a different run at which the leg is to end.</param>        
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">An 
            unexpected error occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeRun.NPD">
            <summary>
            Gets or sets the nominal diameter of the run property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeRun.InsulationSpec">
            <summary>
            Insulation specification assigned to the run.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.FailedToCreatePipeRunException">
            <summary>
            This exception is thrown when there is an unexpected failure during creation of a PipeRun object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.FailedToCreatePipeRunException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of FailedToCreatePipeRunException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException">
            <summary>
            This exception is thrown when there is an unexpected failure while associating a Specification object to a run.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of FailedToAssignSpecException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetInsulationThickness">
            <summary>
            This exception is thrown when an there is no insulation thickness defined 
            for the insulation temperature defined on the run.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetInsulationThickness.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of RteFailedToGetInsulationThickness class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidShortCode">
            <summary>
            This exception is thrown when there is no feature type defined for the short code. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidShortCode.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of RteInvalidShortCode class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationSpecException">
            <summary>
            This exception is thrown when there is an unexpected failure in SetInsulationSpec method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationSpecException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToSetInsulationSpecException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationSpecException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteFailedToSetInsulationSpecException class
            with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationSpecException.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToSetInsulationSpecException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToRemoveInsulationSpec">
            <summary>
            This exception is thrown when there is an error while removing InsulationSpec.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToRemoveInsulationSpec.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToRemoveInsulationSpec class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToRemoveInsulationSpec.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteFailedToRemoveInsulationSpec class
            with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToRemoveInsulationSpec.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToRemoveInsulationSpec class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationTemperature">
            <summary>
            This exception is thrown when there is an error trying to set InsulationTemperature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationTemperature.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToSetInsulationTemperature class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationTemperature.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteFailedToSetInsulationTemperature class
            with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToSetInsulationTemperature.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToSetInsulationTemperature class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedInNominalDiameter">
            <summary>
            This exception is thrown when there is an error trying to get or set the nominal diameter.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedInNominalDiameter.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedInNominalDiameter class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedInNominalDiameter.#ctor">
            <summary>
            Initializes a new instance of the RteFailedInNominalDiameter class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctRun">
            <summary>
            DuctRun is the .NET wrapper class for DuctRun objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for duct runs.
            </summary>
            <param name="oBOP">PrivateBusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.HVACSpec)">
            <summary>
            Public constructor for the DuctRun class.
            </summary>
            <param name="oParentSystem">Parent system of the new duct run.</param>
            <param name="oHVACSpec">Specification of the new duct run.</param>
            <exception cref="T:System.ArgumentNullException">Null argumnts.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Access denied.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Parent system is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid parent system.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetAllowableSpecs">Failed to get allowable specifications.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException">Invalid given HVAC specification object.</exception>
            <exception cref="T:System.OutOfMemoryException">Failed to create the duct run due to out of memory problem.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Failed to create duct run.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetMaterial">Failed to get material on given specification.</exception>
            <example>This example shows how to create the duct run.
            <code>
            'Get the HVAC spec object.
            Dim oHVACSpec As HVACSpec = Nothing
            'Get the Parent system for the DuctRun.
            Dim oSystem As ISystem = Nothing
            'Create the DuctRun.
            Dim oDuctRun As New DuctRun(oSystem, oHVACSpec)        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.#ctor(Ingr.SP3D.Route.Middle.DuctRun)">
            <summary>
            Copy constructor for the DuctRun wrapper class.
            </summary>
            <param name="oDuctRunToCopy">Duct run to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Access denied exception.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Failed to create run object.</exception>        
            <example>This example shows how to do copy constructor of the duct run.
            <code>
            'Get the existing DuctRun.
            Dim oDuctRunToCopy As DuctRun = Nothing
            'Using copy constructor to copy the existing duct run.
            Dim oDuctRun As New DuctRun(oDuctRunToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.Finalize">
            <summary>
            Destructor for the DuctRun class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenPointAndPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.DuctEndFeature@)">
            <summary>
            Routes a leg between two passed in positions.
            </summary>
            <param name="oFromPosition">Leg starting position.</param>
            <param name="oToPosition">Leg end position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oDuctEndFeature">Newly created end feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException">Failed to route between point and point.</exception>
            <example>This example explains how to route a duct between point and a point.
            <code>
            'Create the DuctRun.
            Dim oDuctRun As DuctRun = Nothing
            'Define oFromPosition, oToPosition from where the route has to start and end.
            Dim oFromPosition As Position = Nothing
            Dim oToPosition As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.5*Math.PI 'Set the orientation angle in radians.
            Dim oDuctEndFeature As DuctEndFeature = Nothing
            'Using RouteBetweenPointAndPoint() to route a Duct from a point to another point.
            oDuctRun.RouteBetweenPointAndPoint(oFromPosition, oToPosition, oRteCrossSection, dOrientationAngle, oDuctEndFeature)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenEndFeatureAndPoint(Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.DuctEndFeature@)">
            <summary>
            Routes a leg from given end feature to given position.
            </summary>
            <param name="oDuctEndFeature">Duct end feature at which the new leg will start.</param>
            <param name="oToPosition">End position of new leg.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oNewDuctEndFeature">Newly created end feature at passed in position.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException">Failed to route between end feature and point.</exception>
            <example>This example explains how to route between end feature and a point.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the DuctEndFeature from where the route has to start.
            Dim oDuctEndFeature As DuctEndFeature = Nothing
            'Define ToPosition from where the route has to end.
            Dim oToPosition As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim oNewDuctEndFeature As DuctEndFeature = Nothing
            'Using RouteBetweenEndFeatureAndPoint() route a duct from end path feature to a point.
            oDuctRun.RouteBetweenEndFeatureAndPoint(oDuctEndFeature, oToPosition, oRteCrossSection, dOrientationAngle, oNewDuctEndFeature)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenEndFeatureAndEndFeature(Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg between two end features. 
            </summary>
            <param name="oFromEndFeature">Duct end feature at which the leg will start.</param>
            <param name="oToEndFeature">Duct end feature at which the leg will end.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">Failed to route between two end features.</exception>
            <example>This example explains how to route between two end features.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the oFromEndFeature, oToEndFeature
            Dim oFromEndFeature As DuctEndFeature
            Dim oToEndFeature As DuctEndFeature
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenEndFeatureAndEndFeature(), to route a duct between two end features.
            oDuctRun.RouteBetweenEndFeatureAndEndFeature(oFromEndFeature, oToEndFeature, oRteCrossSection, dOrientationAngle)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenBranchAndPoint(Ingr.SP3D.Route.Middle.DuctStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.DuctEndFeature@)">
            <summary>
            Routes a leg between a straight feature and point. 
            </summary>
            <param name="oDuctStraightFeature">Duct straight feature on which to branch out.</param>
            <param name="oBranchPosition">Position of the straight feature.</param>
            <param name="oToPosition">End position of new leg.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oDuctEndFeature">Newly created end feature at passed in position.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException">Failed to route between branch and point.</exception>
            <example>This example explains how to route between branch and point.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the DuctStraightFeature from which we are branching out.
            Dim oDuctStraightFeature As DuctStraightFeature = Nothing
            Dim oBranchFromPosition As Position = Nothing
            'Define ToPosition from where the route has to end.
            Dim oToPosition As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim oDuctEndFeature As DuctEndFeature = Nothing
            'Using RouteBetweenBranchAndPoint() route a duct from branch feature to a point.
            oDuctRun.RouteBetweenBranchAndPoint(oDuctStraightFeature, oBranchFromPosition, oToPosition, oRteCrossSection, dOrientationAngle, oDuctEndFeature)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenBranchAndEndFeature(Ingr.SP3D.Route.Middle.DuctStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg between branch and end feature. 
            </summary>
            <param name="oDuctStraightFeature">Duct straight feature on which to branch out.</param>
            <param name="oBranchPosition">Position of the duct straight feature.</param>
            <param name="oDuctEndFeature">Duct end feature at which the routing leg ends.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException">Failed to route from a position of straight feature to the end feature.</exception>
            <example>This example explains how to route from the position of a straight feature to the end feature.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the DuctStraightFeature from which we are branching out.
            Dim oDuctStraightFeature As DuctStraightFeature = Nothing
            Dim oBranchPosition As Position = Nothing
            'Define the DuctEndFeature to which we are branching in.
            Dim oDuctEndFeature As DuctEndFeature = Nothing
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenBranchAndEndFeature(), to route a duct from branch feature to end feature.
            oDuctRun.RouteBetweenBranchAndEndFeature(oDuctStraightFeature, oBranchPosition, oDuctEndFeature, oRteCrossSection, dOrientationAngle)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenBranchAndBranch(Ingr.SP3D.Route.Middle.DuctStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.DuctStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg between two straight features.
            </summary>
            <param name="oFromDuctStraightFeature">Duct straight feature on which to branch out.</param>
            <param name="oBranchFromPosition">Position of the from duct straight feature.</param>
            <param name="oToDuctStraightFeature">Duct straight feature on which we are branching in.</param>
            <param name="oBranchToPosition">Position of the ending duct straight feature.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException">Failed to route between branch and branch.</exception>
            <example>This example explains how to route between two branches.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the DuctStraightFeature from which we are branching out.
            Dim oFromDuctStraightFeature As DuctStraightFeature = Nothing
            Dim oBranchFromPosition As Position = Nothing
            'Define the DuctStraightFeature to which we are branching in.
            Dim oToDuctStraightFeature As DuctStraightFeature = Nothing
            Dim oBranchToPosition As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenBranchAndBranch() route a Duct between two branches.
            oDuctRun.RouteBetweenBranchAndBranch(oFromDuctStraightFeature, oBranchFromPosition, oToDuctStraightFeature, oBranchToPosition, oRteCrossSection, dOrientationAngle)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenPortAndPoint(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.DuctEndFeature@)">
            <summary>
            Routes a leg between port and point. 
            </summary>
            <param name="oPort">Port from which the leg must start.</param>
            <param name="oToPosition">Position at which the leg must end.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oDuctEndFeature">Newly created end feature at given position.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">Failed to route between two end features.</exception>
            <example>This example explains how to route between port and point.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the oPort from which route has to start.
            Dim oPort As DistributionPort
            'Define the ToPosition.
            Dim oToPosition As Position
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim oDuctEndFeature As DuctEndFeature
            'Using RouteBetweenPortAndPoint(), to route a duct from port to point.
            oDuctRun.RouteBetweenPortAndPoint(oPort, oToPosition, oRteCrossSection, dOrientationAngle, oDuctEndFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenPortAndEndFeature(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg between port and end feature.
            </summary>
            <param name="oPort">Port from which the leg starts.</param>
            <param name="oDuctEndFeature">Duct end feature where the leg ends.</param>&gt;
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException">Failed to route between port and end feature.</exception>
            <example>This example explains how to route between a port and end feature.
            <code>        
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the oPort from which route has to start.
            Dim oPort As DistributionPort
            'Define the oDuctEndFeature.
            Dim oDuctEndFeature As DuctEndFeature
            'Define the Route cross section object and set it's properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenPortAndEndFeature(), to route a duct from port to end feature.
            oDuctRun.RouteBetweenPortAndEndFeature(oPort, oDuctEndFeature, oRteCrossSection, dOrientationAngle)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenPortAndBranch(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.DuctStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg from port to a branch. 
            </summary>
            <param name="oPort">Port from which the leg starts.</param>
            <param name="oDuctStraightFeature">Duct straight feature into which to branch in.</param>
            <param name="oBranchPosition">Position on the duct straight feature.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException">Failed to route between port and branch.</exception>
            <example>This example explains how to route between port and branch.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the oPort from which route has to start.
            Dim oPort As DistributionPort
            'Define the oDuctStraightFeature on which route has to end.
            Dim oDuctStraightFeature As DuctStraightFeature
            Dim oBranchPosition As Position
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenPortAndBranch(), to route a duct from port to branch.
            oDuctRun.RouteBetweenPortAndBranch(oPort, oDuctStraightFeature, oBranchPosition, oRteCrossSection, dOrientationAngle)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.RouteBetweenPortAndPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg from one port to another. 
            </summary>
            <param name="oFromPort">Port from which the leg starts.</param>
            <param name="oToPort">Port to which the leg ends.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException">Failed to route from one port to another.</exception>
            <example>This example explains about how to route from one port to another.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the two HVAC ports, ie, oFromPort,oToPort.
            Dim oFromPort As DistributionPort
            Dim oToPort As DistributionPort
            'Define the Route cross section object and set its properties.
            Dim oRteCrossSection As New RouteCrossSection()
            oRteCrossSection.Width = 0.15 'Set the Width value.
            oRteCrossSection.Depth = 0.1 'Set the Depth value.
            oRteCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oRteCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenPortAndPort(), to route a duct between two ports.
            oDuctRun.RouteBetweenPortAndPort(oFromPort, oToPort, oRteCrossSection, dOrientationAngle)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertFeatureByPartOnFeature(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a feature given part.
            </summary>
            <param name="oCatalogPart">Catalog part which has to be inserted.</param>
            <param name="oInsertOnFeature">Feature on which we are going to insert feature.</param>
            <param name="oInsertAtPosition">Position at which the component must be inserted.</param>
            <param name="oInsertedFeature">Newly created feature at given position.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException">An unexpected error occurred.</exception>
            <example>This example explains how to insert a feature on a given feature (straight/end).
            <code>
            'Create the Duct.
            Dim oDuctRun As DuctRun = Nothing
            'Define the Part (catalog part) which is to be inserted.
            Dim oCatalogPart As Part = Nothing
            'Define the Feature on which the Component has to be inserted.
            Dim oInsertOnFeature As RouteFeature = Nothing
            'Define the Position on the StraightFeature where the component has to be inserted.
            'In case of an Endfeature, Endfeature location is taken irrespective of the location passed in here.
            Dim oInsertAtPosition As Position = Nothing
            'Declare a variable to hold the new inserted feature return by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertFeatureByPartOnFeature(), to insert a component on a duct straight feature or an end feature.
            oDuctRun.InsertFeatureByPartOnFeature(oCatalogPart, oInsertOnFeature, oInsertAtPosition, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertSlantedTransitionOnEndFeature(Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a slanted transition on a given end feature.
            </summary>
            <param name="oInsertOnFeature">Duct end feature on which the slanted transition needs to be inserted.</param>
            <param name="oEndTransitionPos">End transition position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oInsertedTransition">Retunrs the inserted slanted transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnEndFeatException">An unexpected error occurred.</exception>
            <example>This example explains how to insert a slanted transition on a given end feature.
            <code>
            'Create the duct.
            Dim oDuctRun As DuctRun = Nothing       
            Dim oInsertOnFeature As EndFeature = Nothing        
            'Define end transtition position.
            Dim oEndTransitionPos As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Declare a variable to hold the new inserted feature return by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertSlantedTransitionOnEndFeature(), to insert a slanted transition on end feature.
            oDuctRun.InsertSlantedTransitionOnEndFeature(oInsertOnFeature, oEndTransitionPos, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertSlantedTransitionOnPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a slanted transition on a given port.
            </summary>
            <param name="oInsertOnPort">Port on which the slanted transition needs to be inserted.</param>
            <param name="oEndTransitionPos">End transition position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oInsertedTransition">Returns the inserted slanted transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnPortException">An unexpected error occurred.</exception>
            <example>This example explains how to insert a slanted transition on a given port.
            <code>
            'Create the duct.
            Dim oDuctRun As DuctRun = Nothing       
            Dim oInsertOnPort As DistributionPort = Nothing        
            'Define end transtition position.
            Dim oEndTransitionPos As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'set the orientation angle in radians.
            'Declare a variable to hold the new inserted feature return by this method.
            Dim oInsertedFeature As RouteFeature = Nothing        
            'Using InsertSlantedTransitionOnPort(), to insert a slanted transition on port.
            oDuctRun.InsertSlantedTransitionOnPort(oInsertOnPort, oEndTransitionPos, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertStraightTransitionOnEndFeature(Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.StraightTransAlignTypes,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Insert straight transition on duct end feature.
            </summary>
            <param name="oDuctEndFeature">Duct end feature.</param>
            <param name="oTransEndPosition">Transistion end position.</param>
            <param name="eAlign">Alignment type.</param>
            <param name="oCrossSection">Cross section of transition end.</param>
            <param name="dOrientationAngle">Orientation angle of transition.</param>
            <param name="oInsertedTransition">Inserted transition feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">Invalid cross section.</exception>  
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature">Unexpected failure while inserting transition on duct end feature.</exception>
            <example>This example explains how to insert straight transition on duct end feature by passing end position as input.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define duct end feature on which transition to be inserted.
            Dim oDuctEndFeature As DuctEndFeature = Nothing
            'Define end cross section of transition.
            Dim oCrossSection As RouteCrossSection = Nothing
            'Define end position of transition.
            Dim oEndPosition As Position = Nothing
            'Define straight transition alignment type.
            Dim eAlign = StraightTransAlignTypes.CENTERLINE
            'Define orientation angle of transition to be inserted.
            Dim dOrientationAngle As Double = 1.5
            'Declare a variable to hold inserted transition feature.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Use InsertStraightTransitionOnEndFeature() to insert transition on duct end feature.
            oDuctRun.InsertStraightTransitionOnEndFeature(oDuctEndFeature, oEndPosition, eAlign, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertStraightTransitionOnEndFeature(Ingr.SP3D.Route.Middle.DuctEndFeature,System.Double,Ingr.SP3D.Route.Middle.StraightTransAlignTypes,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Insert straight transition on duct end feature.
            </summary>
            <param name="oDuctEndFeature">Duct end feature.</param>
            <param name="dTransLength">Length of transition.</param>
            <param name="eAlign">Alignment type.</param>
            <param name="dOrientationAngle">Orientation angle of transition.</param>
            <param name="oCrossSection">Cross section of transition.</param>
            <param name="oInsertedTransition">Inserted transition feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">Invalid cross section.</exception>  
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature">Unexpected failure while inserting transition on end feature.</exception>
            <example>This example explains how to insert straight transition on duct end feature by passing transition length as input. 
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define duct end feature on which transition to be inserted.
            Dim oDuctEndFeature As DuctEndFeature = Nothing
            'Define end cross section of transition.
            Dim oCrossSection As RouteCrossSection = Nothing
            'Define length of transition.
            Dim dTransLength As Double = 1.0
            'Define straight transition alignment type.
            Dim eAlign = StraightTransAlignTypes.CENTERLINE
            'Define orientation angle of transition to be inserted.
            Dim dOrientationAngle As Double = 1.5
            'Declare a variable to hold inserted transition feature.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Use InsertStraightTransitionOnEndFeature() to insert transition on duct end feature.
            oDuctRun.InsertStraightTransitionOnEndFeature(oDuctEndFeature, dTransLength, eAlign, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertStraightTransitionOnPort(Ingr.SP3D.Equipment.Middle.DistributionPort,System.Double,Ingr.SP3D.Route.Middle.StraightTransAlignTypes,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts straight transition on component or equipment port.
            </summary>
            <param name="oInsertOnPort">HVAC port on which transition to be inserted.</param>
            <param name="dTransLength">Length of transition.</param>
            <param name="eAlign">Alignment type of transition.</param>
            <param name="oCrossSection">End cross section of transition.</param>
            <param name="dOrientationAngle">Orientation angle of transition.</param>
            <param name="oInsertedTransition">Inserted transition feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">Invalid cross section.</exception>  
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnPortException">Unexpected failure while inserting transition on port.</exception>
            <example>This example explains about how to insert straight transition on port by passing transition length as input. 
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define distribution port on which transition to be inserted.
            Dim oDuctPort As DistributionPort = Nothing
            'Define end cross section of transition.
            Dim oCrossSection As RouteCrossSection = Nothing
            'Define length of transition.
            Dim dTransLength As Double = 1.0
            'Define straight transition alignment type.
            Dim eAlign = StraightTransAlignTypes.CENTERLINE
            'Define orientation angle of transition to be inserted.
            Dim dOrientationAngle As Double = 1.5
            'Declare a variable to hold inserted transition feature.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Use InsertStraightTransitionOnPort() to insert transition on equipment or component HVAC port.
            oDuctRun.InsertStraightTransitionOnPort(oDuctPort, dTransLength, eAlign, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertStraightTransitionOnPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.StraightTransAlignTypes,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
             Inserts straight transition on HVAC component or equipment port.
            </summary>
            <param name="oInsertOnPort">HVAC port on which transition to be inserted.</param>
            <param name="oTransEndPosition">Transition end position.</param>
            <param name="eAlign">Alignment type.</param>
            <param name="oCrossSection">Transition end cross section.</param>
            <param name="dOrientationAngle">Orientation angle of transition.</param>
            <param name="oInsertedTransition">Inserted transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">Invalid cross section.</exception>  
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnPortException">Unexpected failure while inserting transition on port.</exception>
            <example>This example explains about how to insert straight transition on duct port by passing end position as input.
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define distribution port on which transition to be inserted.
            Dim oDuctPort As DistributionPort = Nothing
            'Define end cross section of transition.
            Dim oCrossSection As RouteCrossSection = Nothing
            'Define end position of transition.
            Dim oEndPosition As Position = Nothing
            'Define straight transition alignment type.
            Dim eAlign = StraightTransAlignTypes.CENTERLINE
            'Define orientation angle of transition to be inserted.
            Dim dOrientationAngle As Double = 0.1
            'Declare a variable to hold inserted transition feature.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Use InsertStraightTransitionOnPort() to insert transition on equipment or component hvac port.
            oDuctRun.InsertStraightTransitionOnPort(oDuctPort, oEndPosition, eAlign, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertTurnTransitionOnEndFeature(Ingr.SP3D.Route.Middle.DuctEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,System.Double,Ingr.SP3D.Route.Middle.TurnTransAlignTypes,System.Boolean,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a turn transition on a given end feature.
            </summary>
            <param name="oInsertOnFeature">Duct end feature on which the turn transition needs to be inserted.</param>
            <param name="oEndTransitionPos">End transition position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="dThroatRadius">Throat radius.</param>
            <param name="eTurnAlign">Turn alignment type.</param>
            <param name="bMitered">Mitered in true or false.</param>
            <param name="oInsertedTransition">Returns the inserted turn transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnEndFeatureException">An unexpected error occured in InsertTurnTransitionOnEndFeature method.</exception>
            <example>This example explains how to insert a turn transition on a given end feature.
            <code>
            'Create the duct.
            Dim oDuctRun As DuctRun = Nothing
            Dim oInsertOnFeature As DuctEndFeature = Nothing
            'Define end transition position.
            Dim oEndTransitionPos As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim dThroatRadius As Double = 1.0 'Set throat radius value.
            Dim eTurnAlign As TurnTransAlignTypes = TurnTransAlignTypes.ALIGN_CENTER 'Set the turn align type.
            Dim bMitered As Boolean = False ' Set the mitered flag.
            'Declare a variable to hold the new inserted feature returned by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertTurnTransitionOnEndFeature(), to insert a turn transition on end feature.
            oDuctRun.InsertTurnTransitionOnEndFeature(oInsertOnFeature, oEndTransitionPos, oCrossSection, dOrientationAngle, dThroatRadius, eTurnAlign, bMitered, oInsertedFeature)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertTurnTransitionOnPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,System.Double,Ingr.SP3D.Route.Middle.TurnTransAlignTypes,System.Boolean,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a turn transition on a given port.
            </summary>
            <param name="oInsertOnPort">Port on which the turn transition needs to be inserted.</param>
            <param name="oEndTransitionPos">End transition position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="dThroatRadius">Throat radius.</param>
            <param name="eTurnAlign">Turn alignment type.</param>
            <param name="bMitered">Mitered in true or false.</param>
            <param name="oInsertedTransition">Returns the inserted turn transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnPortException">An unexpected error occured in InsertTurnTransitionOnPort method.</exception>
            <example>This example explains how to insert a turn transition on a given port.
            <code>
            'Create the duct.
            Dim oDuctRun As DuctRun = Nothing
            Dim oInsertOnPort As DistributionPort = Nothing
            'Define end transtition position.
            Dim oEndTransitionPos As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim dThroatRadius As Double = 1.0 'Set throat radius value.
            Dim eTurnAlign As TurnTransAlignTypes = TurnTransAlignTypes.ALIGN_CENTER 'Set the turn align type.
            Dim bMitered As Boolean = False ' Set the mitered flag.
            'Declare a variable to hold the new inserted feature returned by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertTurnTransitionOnEndFeature(), to insert a turn transition on port.
            oDuctRun.InsertTurnTransitionOnEndFeature(oInsertOnPort, oEndTransitionPos, oCrossSection, dOrientationAngle, dThroatRadius, eTurnAlign, bMitered, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.InsertFeatureByPartOnPort(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Insert duct feature on port by passing catalog part.
            </summary>
            <param name="oCatalogPart">Inserting catalog part.</param>
            <param name="oInsertOnPort">Equipment or component port.</param>
            <param name="oInsertedFeature">Inserted duct feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException">Unexpected error while inserting feature by part on given port.</exception>        
            <example>This example explains how to insert feature on given port (component/equipment port).
            <code>
            'Create the duct run.
            Dim oDuctRun As DuctRun = Nothing
            'Define the Part(Catalog part) which is to be inserted.
            Dim oCatalogPart As Part = Nothing
            'Define the port on which the component has to be inserted.
            Dim oInsertOnPort As DistributionPort = Nothing
            'Declare a variable to hold the new inserted feature return by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertFeatureByPartOnPort(), to insert a component on a component port or equipment port.
            oDuctRun.InsertFeatureByPartOnPort(oCatalogPart, oInsertOnPort, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctRun.GetOrientationAngle(System.Double)">
            <summary>
            Converts to corresponding +ve value if we pass -ve values. 
            </summary>        
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IConduitPathFeature">
            <summary>
            Properties common to all conduit path features.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.IConduitPathFeature.ShortCode">
            <summary>
            Gets or sets short code property on the conduit path feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitPathFeatHelper.ShortCode">
            <summary>
            Sets or gets the short code property on the route feature.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CableTrayStockPart">
            <summary>
            CableTrayStockPart is the .NET wrapper class for cable tray part occurence objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayStockPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CableTrayStockPart base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayStockPart.#ctor">
            <summary>
            Internal constructor for the CableTrayStockPart base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayStockPart.Finalize">
            <summary>
            Destructor for the CableTrayStockPart base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctStraightFeature">
            <summary>
            Wrapper for Route DuctStraightFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctStraightFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctStraightFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctStraightFeature.#ctor">
            <summary>
            Public constructor for the DuctStraightFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctStraightFeature.Finalize">
            <summary>
            Destructor for the DuctStraightFeature base class
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctAlongLegFeature">
            <summary>
            Wrapper class for Route DuctAlongLegFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctAlongLegFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctAlongLegFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctAlongLegFeature.#ctor">
            <summary>
            Public constructor for the DuctAlongLegFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctAlongLegFeature.Finalize">
            <summary>
            Destructor for the DuctAlongLegFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.SpoolHelper">
            <summary>
            The SpoolHelper class helps to create spools.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.SpoolHelper.#ctor">
            <summary>
            Creates a SpoolHelper object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.SpoolHelper.CreateSpools(Ingr.SP3D.Common.Middle.ISpoolableObject,Ingr.SP3D.ReferenceData.Middle.Services.SpoolRule,Ingr.SP3D.ReferenceData.Middle.Services.SpoolingType)">
            <summary>
            Creates the pipe/duct spools based on the spool type.
            </summary>
            <param name="oSpoolableObject">SpoolableObject object.</param>
            <param name="oSpoolRule">SpoolRule object.</param>
            <param name="eSpoolingType">Type of spool to be created.</param>
            <exception cref="T:System.ArgumentNullException">The SpoolRule object is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RtePlateNotConnectedToPipeException">No connection exists between the penetration part and the pipe.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteEmptySpoolableObjectException">The passed in SpoolableObject has no parts underneath it.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">The SpoolableObject is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">The current user does not have write permission to the system object.</exception>       
            <example>This example shows how to create spools.
            <code>
            'Get the SpoolableObject from PipeLineSystem or DuctSystem which support ISpoolableObject interface.
            Dim oSpoolableObject As ISpoolableObject = Nothing
            'Create the SpoolRule.
            Dim oSpoolRule As New SpoolRule()
            'Initialize the required SpoolType (in this case PipeSpool) to be created.
            Dim eSpoolingType As SpoolingType
            eSpoolingType = SpoolingType.PipeSpool
            'Create a new SpoolHelper object.
            Dim oSpoolHelper As New SpoolHelper
            'Declare a variable to hold the spools created which will be returned by CreateSpools method.
            Dim oNewSpools As ReadOnlyCollection(Of Spool)
            'Using CreateSpool() method to spool the PipelineSystem/DuctingSystem.
            oNewSpools = oSpoolHelper.CreateSpools(oSpoolableObject, oSpoolRule, eSpoolingType)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.SpoolHelper.CreatePenetrationSpools(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.ReferenceData.Middle.Services.SpoolRule)">
            <summary>
            Creates the spools of the specified spool type.
            </summary>
            <param name="oPenetrationPlate">PenetrationPlate object.</param>
            <param name="oSpoolRule">SpoolRule object.</param>
            <exception cref="T:System.ArgumentNullException">The SpoolRule object is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RtePlateNotConnectedToPipeException">No connection exists between the penetration part and the pipe.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">The SpoolableObject is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">The current user does not have write permission to the system object.</exception>
            <example>This example shows how to create penetration spools.
            <code>
            'Place a PenetrationPlate (StandardComponent) object which is associated with a pipeline and pass in that PenetrationPlate to this method.
            Dim oPenetrationPlate As BusinessObject = Nothing
            'Create the SpoolRule.(Or get the default spool rule from catalog using getspoolrule() method on CatalogOutfittingHelper class.)
            Dim oSpoolRule As New SpoolRule()
            'Create a new SpoolHelper object.
            Dim oSpoolHelper As New SpoolHelper
            'Declare a variable to hold the spools created which will be returned by CreateSpools method.
            Dim oNewSpools As ReadOnlyCollection(Of Spool)
            'Using CreateSpool() method to spool the PipelineSystem/DuctingSystem.
            oNewSpools = oSpoolHelper.CreatePenetrationSpools(oPenetrationPlate, oSpoolRule)
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteEmptySpoolableObjectException">
            <summary>
            This exception is thrown when there are no parts under the Spoolable object. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteEmptySpoolableObjectException.#ctor">
            <summary>
            Initializes a new instance of RteEmptySpoolableObjectException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteMoreThanOnePlateException">
            <summary>
            The number of penetration parts connected to a pipe is greater than one. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteMoreThanOnePlateException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of RteMoreThanOnePlateException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RtePlateNotConnectedToPipeException">
            <summary>
            No connection exists between the penetration part and the pipe. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RtePlateNotConnectedToPipeException.#ctor">
            <summary>
            Initializes a new instance of RtePlateNotConnectedToPipeException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpoolingTypeException">
            <summary>
            Invalid combination of the Spoolable object and spooling type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidSpoolingTypeException.#ctor">
            <summary>
            Initializes a new instance of RteInvalidSpoolingTypeException class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteNoSubSpoolsException">
            <summary>
            Number of subspools created is zero.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteNoSubSpoolsException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of RteNoSubSpoolsException class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitStockPart">
            <summary>
            ConduitStockPart is the .NET wrapper class for Conduit part occurence objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitStockPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitStockPart base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitStockPart.#ctor">
            <summary>
            Internal constructor for the ConduitStockPart base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitStockPart.Finalize">
            <summary>
            Destructor for the ConduitStockPart base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayTurnTransitionFeature">
            <summary>
            Wrapper for Route CablewayTurnTransitionFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayTurnTransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayTurnTransitionFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayTurnTransitionFeature.#ctor">
            <summary>
            Public constructor for the CablewayTurnTransitionFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayTurnTransitionFeature.Finalize">
            <summary>
            Destructor for the CablewayTurnTransitionFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayEndFeature">
            <summary>
            Wrapper for Route CablewayEndFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayEndFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayEndFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayEndFeature.#ctor">
            <summary>
            Public constructor for the CablewayEndFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayEndFeature.Finalize">
            <summary>
            Destructor for the CablewayEndFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PenetrationSpool">
            <summary>
            Class representing PenetrationSpool.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PenetrationSpool.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PenetrationSpool class.
            </summary>
            <param name="oBOP">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PenetrationSpool.Finalize">
            <summary>
            Destructor for the PenetrationSpool base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PenetrationSpool.IsSpoolOverSized">
            <summary>
            Gets whether the spool is oversized.
            </summary>
            <example>This example shows how to check whether the spool is oversized.
            <code>
            'Create the PenetrationSpool object.
            Dim oPenetrationSpool As PemetrationSpool = Nothing
            Dim bIsSpoolOvesized As Boolean = oPenetrationSpool.IsSpoolOverSized()
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PenetrationSpool.Parts">
            <summary>
            Gets the parts under the spool.
            </summary>
            <example>This example shows how to get the parts associated with a spool.
            <code>
            'Create a PenetrationSpool object.
            Dim oPenetrationSpool As PenetrationSpool
            Dim oPartsCol As ReadOnlyCollection(Of BusinessObject) = oPenetrationSpool.Parts()
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PenetrationSpool.SpoolableObject">
            <summary>
            Gets the SpoolableObject associated with the penetration spool.
            </summary>
            <example>This example shows how to get the spoolable object associated with a spool.
            <code>
            'Create a PenetrationSpool object.
            Dim oPenetrationSpool As PenetrationSpool
            Dim oSpoolableObject As ISpoolableObject = oPenetrationSpool.SpoolableObject
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.SplitTypes">
            <summary>
            Split types enumerator.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.SplitTypes.SPLIT">
            <summary>
            Mask value to indicate the split type as SPLIT.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.SplitTypes.TAKEDOWN">
            <summary>
            Mask value to indicate the split type as TAKEDOWN.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.SplitTypes.FEATUREBREAK">
            <summary>
            Mask value to indicate the split type as FEATUREBREAK.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes">
            <summary>
            Path feature object types enumerator.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_UNDEFINED">
            <summary>
            Mask value to indicate the UNDEFINED feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_ALONG">
            <summary>
            Mask value to indicate the ALONG leg feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_BRANCH">
            <summary>
            Mask value to indicate the BRANCH feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_END">
            <summary>
            Mask value to indicate the END feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_TRANSITION">
            <summary>
            Mask value to indicate the TRANSITION feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_STRAIGHT">
            <summary>
            Mask value to indicate the STRAIGHT feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_TURN">
            <summary>
            Mask value to indicate the TURN feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_SURFACE">
            <summary>
            Mask value to indicate the SURFACE MOUNT feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_ENTRYEXIT">
            <summary>
            Mask value to indicate the ENTRYEXIT feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureObjectTypes.PathFeatureType_SEGMENT">
            <summary>
            Mask value to indicate the SEGMENT feature type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PathFeatureFunctions">
            <summary>
            Path feature functions enumerator.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_UNDEFINED">
            <summary>
            Mask value to indicate the UNDEFINED function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_ROUTE">
            <summary>
            Mask value to indicate the ROUTE function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_COMPONENT">
            <summary>
            Mask value to indicate the COMPONENT function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_SPLIT">
            <summary>
            Mask value to indicate the SPLIT function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_BRANCHPARENT">
            <summary>
            Mask value to indicate the BRANCHPARENT function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_RUNCHANGE">
            <summary>
            Mask value to indicate the RUNCHANGE function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_TAKEDOWN">
            <summary>
            Mask value to indicate the TAKEDOWN function Type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_TRANSITION">
            <summary>
            Mask value to indicate the TRANSITION function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_PLANNINGSPLIT">
            <summary>
            Mask value to indicate the PLANNINGSPLIT function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_DEFAULTSPLIT">
            <summary>
            Mask value to indicate the DEFAULTSPLIT function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_MATING">
            <summary>
            Mask value to indicate the MATING function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_ATTACHING">
            <summary>
            Mask value to indicate the ATTACHING function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_ENDLEG">
            <summary>
            Mask value to indicate the ENDLEG function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_ENTRY">
            <summary>
            Mask value to indicate the ENTRY function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_EXIT">
            <summary>
            Mask value to indicate the EXIT function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_FEATUREBREAK">
            <summary>
            Mask value to indicate the FEATUREBREAK function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_SIZECHANGE">
            <summary>
            Mask value to indicate the SIZECHANGE function type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PathFeatureFunctions.PathFeatureFunction_DIVISION">
            <summary>
            Mask value to indicate the DIVISION function type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeTapDirection">
            <summary>
            Pipe tap direction enumerator.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PipeTapDirection.PipeTapDirection_PERPENDICULAR">
            <summary>
            Mask value to indicate the tap direction is PERPENDICULAR.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.PipeTapDirection.PipeTapDirection_PARALLEL">
            <summary>
            Mask value to indicate the tap direction is PARALLEL.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CrossSectionShapeTypes">
            <summary>
            Enumerated types of cross sections for cableways and ducts.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.CrossSectionShapeTypes.Rectangular">
            <summary>
            Rectangular shape crosssection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.CrossSectionShapeTypes.FlatOval">
            <summary>
            Flat Oval shape cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.CrossSectionShapeTypes.Round">
            <summary>
            Circular shape cross section.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.StraightTransAlignTypes">
            <summary>
            Enumerated types of transition alignment types.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.CENTERLINE">
            <summary>
            Center line alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.UPPER_RIGHT">
            <summary>
            Upper right alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.UPPER_LEFT">
            <summary>
            Upper left alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.LOWER_LEFT">
            <summary>
            Lower left alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.LOWER_RIGHT">
            <summary>
            Lower right alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.RIGHT_CENTER">
            <summary>
            Right center alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.UPPER_CENTER">
            <summary>
            Upper center alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.LEFT_CENTER">
            <summary>
            Left center alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.LOWER_CENTER">
            <summary>
            Lower center alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.StraightTransAlignTypes.NOT_ALIGNED">
            <summary>
            No alignment.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.TurnTransAlignTypes">
            <summary>
            Enumerated types of turn transition alignment types.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.TurnTransAlignTypes.ALIGN_CENTER">
            <summary>
            Center alignement.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.TurnTransAlignTypes.ALIGN_RIGHT">
            <summary>
            Right alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.TurnTransAlignTypes.ALIGN_LEFT">
            <summary>
            Left alignment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Route.Middle.TurnTransAlignTypes.NOT_ALIGNED">
            <summary>
            No alignment.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IAlongLegFeature">
            <summary>
            Properties and methods common to all along leg features.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IBranchFeature">
            <summary>
            Properties and methods common to all branch features.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ITurnFeature">
            <summary>
            Properties and methods common to all turn features.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IEndFeature">
            <summary>
            Properties and methods common to all end features.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.IStraightFeature">
            <summary>
            Properties and methods common to all end features.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeStockPart">
            <summary>
            PipeStockPart is the .NET wrapper class for pipe part occurrence objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStockPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeStockPart base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStockPart.#ctor">
            <summary>
            Public constructor for the PipeStockPart base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeStockPart.Finalize">
            <summary>
            Destructor for the PipeStockPart base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctSplitFeature">
            <summary>
            Wrapper class for Route DuctSplitFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSplitFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctSplitFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSplitFeature.#ctor">
            <summary>
            Public constructor for the DuctSplitFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSplitFeature.Finalize">
            <summary>
            Destructor for the DuctSplitFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewaySlantTransitionFeature">
            <summary>
            Wrapper class for Route class CablewaySlantTransitionFeature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewaySlantTransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewaySlantTransitionFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewaySlantTransitionFeature.#ctor">
            <summary>
            Public constructor for the CablewaySlantTransitionFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewaySlantTransitionFeature.Finalize">
            <summary>
            Destructor for the CableTraySlantTransFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteCannotConvertBasePartToMatingPart">
            <summary>
            This exception is thrown when the user tries to convert a base part to a mating part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteCannotConvertBasePartToMatingPart.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteCannotConvertBasePartToMatingPart 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteCannotConvertBasePartToMatingPart.#ctor">
            <summary>
            Initializes a new instance of the RteCannotConvertBasePartToMatingPart 
            class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToConvertMatingPartToBasePart">
            <summary>
            This exception is thrown when there is an unexpected failure in ConvertMatingPartToBasePart method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToConvertMatingPartToBasePart.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToConvertMatingPartToBasePart 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToConvertMatingPartToBasePart.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteFailedToConvertMatingPartToBasePart 
            class with a reference to the inner Exception that is the cause of this exception.
            </summary>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToConvertMatingPartToBasePart.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToConvertMatingPartToBasePart 
            class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetFeatureFromPart">
            <summary>
            This exception is thrown when there is no feature associated with the part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToGetFeatureFromPart.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToGetFeatureFromPart 
            class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeTapFeature">
            <summary>
             PipeTapFeature class is the .NET wrapper class representing a PipeTapFeature object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTapFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeTapFeature class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTapFeature.#ctor">
            <summary>
            Private constructor for the PipeTapFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTapFeature.Finalize">
            <summary>
            Destructor for the PipeTapFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTapFeature.#ctor(Ingr.SP3D.Route.Middle.RouteFeature,System.String,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Route.Middle.PipeTapDirection)">
            <summary>
            Public constructor for the PipeTapFeature class.
            </summary>
            <param name="FeatToTap">Pipe feature on which the tap must be placed.</param>
            <param name="TapNumber">Tap number from the tap property data sheet specifying the tap to be placed.</param>
            <param name="LocationOfTap">Position of the tap on the feature to be tapped.</param>
            <param name="TapDirectionVector">Direction vector of the tap.</param>
            <param name="TapDirection">Direction of the tap to be placed. This can be parallel or perpendicular in case of turn or end leg components; for all other cases it must be perpendicular.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Feature to be tapped is not a pipe feature.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTapNumber">No tap is defined in the catalog with the specified tap number.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToCreatePipeTapFeature">Unexpected error in creating a tap feature.</exception>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidTapNumber">
            <summary>
            This exception is raised when the passed in tap number is not defined in the catalog for the spec of the feature to be tapped.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidTapNumber.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInvalidTapNumber class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidTapNumber.#ctor">
            <summary>
            Initializes a new instance of the RteInvalidTapNumber class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteInvalidTapDirection">
            <summary>
            Tap direction cannot be parallel if the feature is not a turn or an end leg component.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidTapDirection.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteInvalidTapDirection class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteInvalidTapDirection.#ctor">
            <summary>
            Initializes a new instance of the RteInvalidTapDirection class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Exceptions.RteFailedToCreatePipeTapFeature">
            <summary>
            Unexpected error in PipeTapfeature constructor.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToCreatePipeTapFeature.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the RteFailedToCreatePipeTapFeature class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToCreatePipeTapFeature.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the RteFailedToCreatePipeTapFeature class
            with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Exceptions.RteFailedToCreatePipeTapFeature.#ctor">
            <summary>
            Initializes a new instance of the RteFailedToCreatePipeTapFeature class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitStraightFeature">
            <summary>
            Wrapper for the route ConduitStraightFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitStraightFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitStraightFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitStraightFeature.#ctor">
            <summary>
            Public constructor for the ConduitStraightFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitStraightFeature.Finalize">
            <summary>
            Destructor for the ConduitStraightFeature base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitStraightFeature.ShortCode">
            <summary>
             Gets or sets the short code property on the ConduitStraightFeature class.
            </summary>
             <example>This example shows how to get or set short code property on ConduitStraightFeature.
             <code>
             Dim sShortCode As string
             'Get shortcode on ConduitStraightFeature
             sShortCode = oConduitStraightFeature.ShortCode
             'Define shortcode
             sShortCode = "Conduit"
             'Set shortcode on ConduitStraightFeature    
             oConduitStraightFeature.ShortCode = sShortCode
             </code>
             </example>        
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeTurnFeature">
            <summary>
             PipeTurnFeature Class is the .NET wrapper class representing a PipeTurnFeature object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTurnFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeTurnFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTurnFeature.#ctor">
            <summary>
            Public constructor for the PipeTurnFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTurnFeature.Finalize">
            <summary>
            Destructor for the PipeTurnFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTurnFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the insulation specification on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeTurnFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. The passed in insulation temperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeTurnFeature.ShortCode">
            <summary>
             Gets or sets the short code property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeTurnFeature.InsulationSpec">
            <summary>
             Gets the insulation specification property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitTurnFeature">
            <summary>
            Wrapper for the route ConduitTurnFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitTurnFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitTurnFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitTurnFeature.#ctor">
            <summary>
            Public constructor for the ConduitTurnFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitTurnFeature.Finalize">
            <summary>
            Destructor for the ConduitTurnFeature base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitTurnFeature.ShortCode">
            <summary>
             Gets or sets the short code property on the ConduitTurnFeature class.
            </summary>
             <example>This example shows how to get or set the short code property on ConduitTurnFeature.
             <code>
             Dim sShortCode As string
             'Get shortcode on ConduitTurnFeature
             sShortCode = oConduitTurnFeature.ShortCode
             'Define shortcode
             sShortCode = "ConduitBend"
             'Set shortcode on ConduitTurnFeature    
             oConduitTurnFeature.ShortCode = sShortCode
             </code>
             </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitAlongLegFeature">
            <summary>
            Wrapper class for route ConduitAlongLegFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitAlongLegFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitAlongLegFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitAlongLegFeature.#ctor">
            <summary>
            Public constructor for the ConduitAlongLegFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitAlongLegFeature.Finalize">
            <summary>
            Destructor for the ConduitAlongLegFeature base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitAlongLegFeature.ShortCode">
            <summary>
             Gets or sets the short code property on the ConduitAlongLegFeature class.
            </summary>
             <example>This example shows how to get or set the shortcode property on ConduitAlongLegFeature.
             <code>
             Dim sShortCode As string
             'Get shortcode on ConduitAlongLegFeature
             sShortCode = oConduitAlongLegFeature.ShortCode
             'Define shortcode
             sShortCode = "TEE"
             'Set shortcode on ConduitAlongLegFeature    
             oConduitAlongLegFeature.ShortCode = sShortCode
             </code>
             </example>        
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctTurnTransitionFeature">
            <summary>
            Wrapper for Route DuctTurnTransitionFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctTurnTransitionFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctTurnTransitionFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctTurnTransitionFeature.#ctor">
            <summary>
            Public constructor for the DuctTurnTransitionFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctTurnTransitionFeature.Finalize">
            <summary>
            Destructor for the DuctTurnTransitionFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayStraightFeature">
            <summary>
            Wrapper for Route CablewayStraightFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayStraightFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayStraightFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayStraightFeature.#ctor">
            <summary>
            Public constructor for the CablewayStraightFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayStraightFeature.Finalize">
            <summary>
            Destructor for the CablewayStraightFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayBranchFeature">
            <summary>
            Wrapper for Route CablewayBranchFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayBranchFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayBranchFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayBranchFeature.#ctor">
            <summary>
            Public constructor for the CablewayBranchFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayBranchFeature.Finalize">
            <summary>
            Destructor for the CablewayBranchFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayAlongLegFeature">
            <summary>
            Wrapper class for Route class CablewayAlongLegFeature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayAlongLegFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayAlongLegFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayAlongLegFeature.#ctor">
            <summary>
            Public constructor for the CablewayAlongLegFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayAlongLegFeature.Finalize">
            <summary>
            Destructor for the CablewayAlongLegFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConnectionItem">
            <summary>
            ConnectionItem is an abstact class, contains the common information for 
            various connection items like PipeGasket,PipeWeld, PipeMechanicalItem, PipeBoltSet.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionItem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConnectionItem base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionItem.#ctor">
            <summary>
            Public constructor for the ConnectionItem base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionItem.Finalize">
            <summary>
            Destructor for the ConnectionItem base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeGasket">
            <summary>
            PipeGasket is a connection item.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeGasket.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeGasket base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeGasket.#ctor">
            <summary>
            Public constructor for the PipeGasket base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeGasket.Finalize">
            <summary>
            Destructor for the PipeGasket base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeWeld">
            <summary>
            PipeWeld is a connection item.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeWeld.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeWeld base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeWeld.#ctor">
            <summary>
            Public constructor for the PipeWeld base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeWeld.Finalize">
            <summary>
            Destructor for the PipeWeld base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeMechanicalItem">
            <summary>
            PipeMechanicalItem is a connection item.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeMechanicalItem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeMechanicalItem base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeMechanicalItem.#ctor">
            <summary>
            Public constructor for the PipeMechanicalItem base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeMechanicalItem.Finalize">
            <summary>
            Destructor for the PipeMechanicalItem base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeBoltSet">
            <summary>
            PipeBoltSet is a connection item.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBoltSet.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeBoltSet base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBoltSet.#ctor">
            <summary>
            Public constructor for the PipeBoltSet base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeBoltSet.Finalize">
            <summary>
            Destructor for the PipeBoltSet base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctSpool">
            <summary>
            Class representing DuctSpool.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSpool.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctSpool class.
            </summary>
            <param name="oBOP">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctSpool.Finalize">
            <summary>
            Destructor for the DuctSpool base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.DuctSpool.IsSpoolOverSized">
            <summary>
            Gets whether the spool is oversized.
            </summary>
            <example>This example shows how to check whether the spool is oversized.
            <code>
            'Create the DuctSpool object.
            Dim oDuctSpool As DuctSpool = Nothing
            Dim bIsSpoolOvesized As Boolean = oDuctSpool.IsSpoolOverSized()
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.DuctSpool.Parts">
            <summary>
            Gets the parts under the spool.
            </summary>
            <example>This example shows how to get the parts associated with a spool.
            <code>
            'Get parts associated with a spool.
            'Create a DuctSpool object.
            Dim oDuctSpool As DuctSpool
            Dim oPartsCol As ReadOnlyCollection(Of BusinessObject) = oDuctSpool.Parts()
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctBranchFeature">
            <summary>
            Wrapper for Route DuctBranchFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctBranchFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctBranchFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctBranchFeature.#ctor">
            <summary>
            Public constructor for the DuctBranchFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctBranchFeature.Finalize">
            <summary>
            Destructor for the DuctBranchFeature base class
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitRun">
            <summary>
            ConduitRun is the .NET wrapper class for conduit run objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for conduit runs.
            </summary>
            <param name="oBOP">PrivateBusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Services.NominalDiameter,System.String)">
            <summary>
            Public constructor for the conduit run wrapper class.
            </summary>
            <param name="oParentSystem">Parent of the new conduit run.</param>
            <param name="oNCD">Nominal diamter class object which contains nominal diameter units and unit type information.</param>
            <param name="strConduitSpecName">Name of the conduit specification for the new conduit run.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument exception.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException">No specification exists for the given specification name.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException">Failed to assign specification.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Unexpected error in conduit
            run constructor.</exception>
            <example>This example shows how to create conduit run for a given NCD, conduit spec name.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Create Nominal Diameter and define its Size and Units properties of the conduit run to be placed
            Dim oNCD As New NominalDiameter 
            'Create Conduit system under which the conduit run has to be created
            Dim oConduitSys As ConduitSystem = Nothing
            'Define Conduit spec name for the conduit run to be created
            Dim sConduitSpecName As String = Nothing
            'Call ConduitRun constructor which takes System parent, NCD, and conduit spec name as arguments to create conduit run
            oConduitRun1 = New ConduitRun(oConduitSys, oNCD, sConduitSpecName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Services.NominalDiameter,Ingr.SP3D.ReferenceData.Middle.ConduitSpec)">
            <summary>
            Public constructor for the conduit run wrapper class.
            </summary>
            <param name="oParentSystem">Parent of the new conduit run.</param>
            <param name="oNCD">Nominal diamter class object which contains nominal diameter units and unit type information.</param>
            <param name="oConduitSpec">ConduitSpec object for the new conduit Run.</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:System.ArgumentException">Invalid argument exception.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException">No specification exists for the given specification object.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToAssignSpecException">Failed to assign specification.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Unexpected error in conduit run constructor.</exception>
            <example>This example shows how to create conduit run for a given NCD, conduit spec.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Create Nominal Diameter and define its Size and Units properties of the conduit run to be placed.
            Dim oNCD As New NominalDiameter 
            'Create Conduit system under which the Conduit run has to be created
            Dim oConduitSys As ConduitSystem = Nothing
            'Define Conduit spec for the conduit run to be created
            Dim oConduitSpec As ConduitSpec = Nothing
            'Call ConduitRun Constructor which takes System parent, NCD, and conduit spec as arguments to create conduit run
            oConduitRun1 = New ConduitRun(oConduitSys, oNCD, oConduitSpec)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.#ctor(Ingr.SP3D.Route.Middle.ConduitRun)">
            <summary>
            ConduitRun copy constructor.
            </summary>
            <param name="ConduitRunToCopy">ConduitRun</param>
            <exception cref="T:System.ArgumentNullException">Cannot set null value.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Unexpected error in ConduitRun constructor.</exception>
            <example>This example shows how to create a copy of conduit run object.
            <code>
            'Create the conduit run.
            Dim oConduitRun As ConduitRun, oConduitRunCopy As ConduitRun = Nothing
            'To create a copy of conduit run call CopyConstructor which takes conduit run as an argument 
            oConduitRunCopy = New ConduitRun(oConduitRun)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.Finalize">
            <summary>
            Destructor for the conduit run wrapper class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenPointAndPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.ConduitEndFeature@)">
            <summary>
            Routes from a point on the current run to another point.
            </summary>
            <param name="oFromPosition">The point on the current run from which the leg is to start.</param>
            <param name="oToPosition">The point to which the leg is to be routed.</param>
            <param name="oConduitEndFeature">The new end feature at the end of the new leg.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to route a conduit between point and point.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oFromPosition, oToPosition from where the route has to start and end
            Dim oFromPosition As Position = Nothing
            Dim oToPosition As Position = Nothing
            'Using RouteBetweenPointAndPoint() route a conduit between point and point
            Dim oCEFeat As RouteFeature = Nothing
            oConduitRun1.RouteBetweenPointAndPoint(oFromPosition, oToPosition, oCEFeat)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenEndFeatureAndPoint(Ingr.SP3D.Route.Middle.ConduitEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.ConduitEndFeature@)">
            <summary>
            Routes from an end feature on the current run to a point.
            </summary>
            <param name="oConduitEndFeature">End feature on the current run at which the leg is to start.</param>
            <param name="oPosition">Position at which the leg is to end.</param>
            <param name="oNewConduitEndFeature">Newly created end feature at given position.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to route a conduit between end feature and point.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oToPosition        
            Dim oToPosition As Position = Nothing
            'Define EndFeature
            Dim oCEFeat As ConduitEndFeature = Nothing
            'Using RouteBetweenEndFeatureAndPoint() route a conduit between end feature and point
            oConduitRun1.RouteBetweenEndFeatureAndPoint(oCEFeat, oToPosition)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenBranchAndBranch(Ingr.SP3D.Route.Middle.ConduitStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.ConduitStraightFeature,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Routes between two branch features.
            </summary>
            <param name="oFromStraightFeatute">Conduit straight feature on which we are branching out.</param>
            <param name="oBranchFromPosition">Start position from the straight feature.</param>
            <param name="oToStraightFeature">Conduit straight feature on which to branch in.</param>
            <param name="oBranchToPosition">Position to end the route.</param>
            <example>This example shows how to route a conduit between branch and branch.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oBranchFromPosition, oBranchToPosition from where the route has to start and end
            Dim oBranchFromPosition As Position = Nothing
            Dim oBranchToPosition As Position = Nothing
            'Define oFromStraightFeatute, oToStraightFeature
            Dim oFromStraightFeatute As ConduitStraightFeature = Nothing
            Dim oToStraightFeature As ConduitStraightFeature = Nothing
            'Using RouteBetweenBranchAndBranch() route a conduit between branch and branch
            oConduitRun1.RouteBetweenBranchAndBranch(oFromStraightFeatute, oFromPosition, oToStraightFeature, oToPosition)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenPortAndBranch(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.ConduitStraightFeature,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Routes between port and branch feature.
            </summary>
            <param name="oPort">Distribution port.</param>
            <param name="oConduitStraightFeature">Conduit straight feature on which to create the branch.</param>
            <param name="oBranchPosition">Position on the conduit straight feature.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
             is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to route a conduit between port and branch.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oBranchPosition         
            Dim oBranchPosition As Position = Nothing
            'Define oConduitStraightFeature
            Dim oConduitStraightFeature As ConduitStraightFeature = Nothing 
            'Define oPort from where conduit has to be routed
            Dim oPort As DistributionPort = Nothing
            'Using RouteBetweenPortAndBranch() route a conduit between port and branch
            oConduitRun1.RouteBetweenPortAndBranch(oPort,oConduitStraightFeature, oBranchPosition)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenPortAndEndFeature(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.ConduitEndFeature)">
            <summary>
            Routes from a port to an end feature.
            </summary>
            <param name="oPort">Port on the current run.</param>
            <param name="oConduitEndFeature">Destination end feature on another run.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
             is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to route a conduit between port and end feature.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun        
            'Define oConduitEndFeature
            Dim oConduitEndFeature As ConduitEndFeature = Nothing 
            'Define oPort from where conduit has to be routed
            Dim oPort As DistributionPort = Nothing
            'Using RouteBetweenPortAndEndFeature() route a conduit between port and end feature
            oConduitRun1.RouteBetweenPortAndEndFeature(oPort,oConduitEndFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenBranchAndPoint(Ingr.SP3D.Route.Middle.ConduitStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.ConduitEndFeature@)">
            <summary>
            Routes from branch to a point.
            </summary>
            <param name="oConduitStraightFeature">Conduit straight feature on which to branch out.</param>
            <param name="oBranchPosition">Start branch position.</param>
            <param name="oPosition">Position at which the leg is to start.</param>
            <param name="oConduitEndFeature">The new conduit end feature at the end of the new leg.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException">
            Unexpected failure routing between a branch and a point.</exception>
            <example>This example shows how to route a conduit between branch and point.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oBranchPosition, oPosition 
            Dim oBranchPosition As Position = Nothing
            Dim oPosition As Position = Nothing
            'Define oConduitStraightFeature, oConduitEndFeature
            Dim oConduitStraightFeature As ConduitStraightFeature = Nothing 
            Dim oConduitEndFeature As ConduitEndFeature = Nothing
            'Using RouteBetweenBranchAndPoint() route a conduit between branch and point
            oConduitRun1.RouteBetweenBranchAndPoint(oConduitStraightFeature, oBranchPosition, oPosition, oConduitEndFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenBranchAndEndFeature(Ingr.SP3D.Route.Middle.ConduitStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.ConduitEndFeature)">
            <summary>
            Routes from branch to end feature.
            </summary>
            <param name="oConduitStraightFeature">Conduit straight feature on which to branch out.</param>
            <param name="oBranchPosition">Branch position from the straight feature.</param>
            <param name="oConduitEndFeature">Conduit end feature at which to route.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException">
            Unexpected failure routing between a branch and an end feature.</exception>
            <example>This example shows how to route a conduit between branch and end feature.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oBranchPosition, oPosition 
            Dim oBranchPosition As Position = Nothing        
            'Define oConduitStraightFeature, oConduitEndFeature
            Dim oConduitStraightFeature As ConduitStraightFeature = Nothing 
            Dim oConduitEndFeature As ConduitEndFeature = Nothing
            'Using RouteBetweenBranchAndEndFeature() route a conduit between branch and end feature
            oConduitRun1.RouteBetweenBranchAndEndFeature(oConduitStraightFeature, oBranchPosition, oConduitEndFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenEndFeatureAndEndFeature(Ingr.SP3D.Route.Middle.ConduitEndFeature,Ingr.SP3D.Route.Middle.ConduitEndFeature)">
            <summary>
            Routes between two end features.
            </summary>
            <param name="oFromConduitEndFeature">End feature on the current run at which the leg is to start.</param>
            <param name="oToConduitEndFeature">End feature on a different run at which the leg is to end.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to route a conduit between branch and end feature.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun              
            'Define oFromConduitEndFeature, oToConduitEndFeature
            Dim oFromConduitEndFeature As ConduitEndFeature = Nothing 
            Dim oToConduitEndFeature As ConduitEndFeature = Nothing
            'Using RouteBetweenEndFeatureAndEndFeature() route a conduit between end feature and end feature
            oConduitRun1.RouteBetweenEndFeatureAndEndFeature(oFromConduitEndFeature, oToConduitEndFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenPortAndPoint(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.ConduitEndFeature@)">
            <summary>
            Routes the conduit from the given port to the given point.
            </summary>
            <param name="oPort">Conduit port.</param>
            <param name="oPosition">Point</param>
            <param name="oConduitEndFeature">Returns conduit end path feature.</param>
            <exception cref="T:System.ArgumentNullException">Given inputs are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Given inupts are invalid.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPointException">Failed to route 
            the conduit from the given port to the given point.</exception>
            <example>This example shows how to route a conduit between port and point.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun
            'Define oPosition         
            Dim oPosition As Position = Nothing
            'Define oConduitEndFeature
            Dim oConduitEndFeature As ConduitEndFeature = Nothing 
            'Define oPort from where conduit has to be routed
            Dim oPort As DistributionPort = Nothing
            'Using RouteBetweenPortAndPoint() route a conduit between port and point
            oConduitRun1.RouteBetweenPortAndPoint(oPort, oPosition, oConduitEndFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.RouteBetweenPortAndPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Equipment.Middle.DistributionPort)">
            <summary>
            Routes from a port on the current run to a port on another run.
            </summary>
            <param name="oFromPort">Port on the current run.</param>
            <param name="oToPort">Port on another run.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">An input argument
            is of the wrong type.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to route a conduit between port and port.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun        
            'Define oFromPort, oToPort 
            Dim oFromPort As DistributionPort = Nothing
            Dim oToPort As DistributionPort = Nothing
            'Using RouteBetweenPortAndPort() to route a conduit between port and port
            oConduitRun1.RouteBetweenPortAndPort(oFromPort, oToPort)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.InsertFeatureByShortCodeOnFeature(System.String,System.Int32,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature identified by its short code.
            </summary>
            <param name="sShortCode">Short code that identifies feature to be inserted.</param>
            <param name="iOptionCode">Option code that further identifies feature to be inserted.</param>
            <param name="oInsertOnFeature">Target feature onto which the feature is being inserted.</param>
            <param name="oInsertAtPos">Insertion position.</param>
            <param name="oSecondaryRun">Input. Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output. Feature that was inserted.</param>
            <exception cref="T:System.ArgumentNullException">An input argument
            is null. </exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidShortCode">The short code passed in 
            is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnFeatureException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to insert a feature.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun        
            'Define sShortCode, lOptionCode 
            Dim sShortCode As String = Nothing
            Dim iOptionCode As Integer = Nothing            
            'Define oInsertOnFeature,oInsertAtPos,oSecondaryRun
            Dim oInsertOnFeature As RouteFeature = Nothing
            Dim oInsertedFeature As RouteFeature = Nothing
            Dim oInsertAtPos As Position = Nothing
            Dim oSecondaryRun As RouteRun = Nothing        
            'Call InsertFeatureByShortCodeOnFeature() to insert feature
            oConduitRun1.InsertFeatureByShortCodeOnFeature(sShortCode, iOptionCode, oInsertOnFeature, oInsertAtPos, oSecondaryRun, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitRun.InsertFeatureByShortCodeOnPort(System.String,System.Int32,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteRun,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a port.  The feature is identified by its short code.
            </summary>
            <param name="sShortCode">Short code that identifies the feature to be inserted.</param>
            <param name="iOptionCode">Option code that further identifies the feature to be inserted.</param>
            <param name="oInsertOnPort">Port onto which the feature is to be inserted.</param>
            <param name="oSecondaryRun">Input. Secondary run, required if inserting a branch or a run change.</param>
            <param name="oInsertedFeature">Output. Feature that was inserted.</param>
            <exception cref="T:System.ArgumentNullException">An input argument is null </exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidShortCode">The short code passed in 
            is Invalid.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByShortCodeOnPortException">An 
            unexpected error occurred.</exception>
            <example>This example shows how to insert a feature.
            <code>
            'Create the conduit run.
            Dim oConduitRun1 As ConduitRun        
            'Define sShortCode, lOptionCode 
            Dim sShortCode As String = Nothing
            Dim iOptionCode As Integer = Nothing            
            'Define oInsertOnPort,oSecondaryRun,oInsertedFeature
            Dim oInsertOnPort As DistributionPort = Nothing
            Dim oInsertedFeature As RouteFeature = Nothing                
            Dim oSecondaryRun As RouteRun = Nothing        
            'Call InsertFeatureByShortCodeOnPort() to insert Feature
            oConduitRun1.InsertFeatureByShortCodeOnPort(sShortCode, iOptionCode, oInsertOnPort, oSecondaryRun, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitRun.NCD">
            <summary>
            Gets or sets the nominal diameter of the run property.
            </summary>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedInNominalDiameter">Failed in the NominalDiamter property.</exception>
            <example>This example shows how to get and set the nominal diameter of the conduit run.
            <code>
            'Create the conduit run.
            Dim oConduitRun As ConduitRun = Nothing
            'Create Nominal diameter object
            Dim oNCD As New NominalDiameter
            'Get the NCD from the Conduit run
            oNCD = oConduitRun.NCD
            'Create a new Nominal diameter object and define its properties
            Dim oNCD1 As New NominalDiameter
            'Set the NCD property on the Conduit run
            oConduitRun.NCD = oNCD1
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitEndFeature">
            <summary>
            Wrapper for the route ConduitEndFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitEndFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitEndFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitEndFeature.#ctor">
            <summary>
            Public constructor for the ConduitEndFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitEndFeature.Finalize">
            <summary>
            Destructor for the ConduitEndFeature base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitEndFeature.ShortCode">
            <summary>
             Gets or sets the short code property on the ConduitEndFeature class.
            </summary>
             <example>This example shows how to get or set short code property on ConduitEndFeature.
             <code>
             Dim sShortCode As string
             'Get shortcode on ConduitEndFeature
             sShortCode = oConduitEndFeature.ShortCode
             'Define shortcode
             sShortCode = "Pullbox"
             'Set shortcode on ConduitEndFeature    
             oConduitEndFeature.ShortCode = sShortCode
             </code>
             </example>        
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipePathFeatHelper.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the InsulationTemperature on the feature  
            before setting the InsulationSpec.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipePathFeatHelper.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. Passed in InsulationTemperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipePathFeatHelper.ShortCode">
            <summary>
            Gets or sets the short code property on the route feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipePathFeatHelper.InsulationSpec">
            <summary>
             Gets the insulation specification.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctComponent">
            <summary>
            .Net wrapper class for com class CPRteDuctComponentOcc.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctComponent.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for DuctComponent base class.
            </summary>
            <param name="oPBO"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctComponent.#ctor">
            <summary>
            Internal constuctor for DuctComponent base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctComponent.Finalize">
            <summary>
            Destructor for DuctComponent base class. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConnectionBase">
            <summary>
            ConnectionBase is an abstract class, which contains the common functionalities for route connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConnectionBase base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.#ctor">
            <summary>
            Public constructor for the ConnectionBase base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.Finalize">
            <summary>
            Destructor for the ConnectionBase base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.AddConnectionPart(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            AddConnectionPart method: not implemented.
            </summary>
            <param name="oPart"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.AddConnectionParts(System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            AddConnectionParts method: not implemented.
            </summary>
            <param name="oParts"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.GetOtherPort(Ingr.SP3D.Common.Middle.IDistributionPort)">
            <summary>
            GetOtherPort method: not implemented.
            </summary>
            <param name="oPort"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.RemoveConnectionPart(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            RemoveConnectionPart method: not implemented.
            </summary>
            <param name="oPart"></param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.RemoveConnectionParts(System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            RemoveConnectionParts method: not implemented.
            </summary>
            <param name="oParts"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.FindPort(Ingr.SP3D.Common.Middle.IConnectable)">
            <summary>
            FindPort method: not implemented.
            </summary>
            <param name="oParent"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConnectionBase.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            GetPorts method: is not implemented.
            </summary>
            <param name="eType"></param>
            <returns></returns>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConnectionBase.ConnectionItems">
            <summary>
            Gets the read-only collection of ConnectionItem objects, which are connected.
            </summary>
            <example>This example shows how to get the connection items of a connection object.
            <code>
            ' Set the connection base object.
            Dim oConnectionBase As ConnectionBase = Nothing
            Dim oConnectionItemColl As ReadOnlyCollection(Of ConnectionItem)
            ' Using ConnectionItems property, to get all connection items of a connection object.
            oConnectionItemColl = oConnectionBase.ConnectionItems
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConnectionBase.ConnectionParts">
            <summary>
            ConnectionParts: returns the Connection parts of a connection object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConnectionBase.Location">
            <summary>
            Returns the location of the connection object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.Connection">
            <summary>
            Connection is a Route connection object, which contains all connection information except the cable tray connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Connection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the Connection base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Connection.#ctor">
            <summary>
            Public constructor for the Connection base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Connection.Finalize">
            <summary>
            Destructor for the Connection base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CableTrayConnection">
            <summary>
            CableTrayConnection is a Connection object, which contains all cable tray connection information.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CableTrayConnection base class.
            </summary>
            <param name="oPBO">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayConnection.#ctor">
            <summary>
            Public constructor for the CableTrayConnection base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableTrayConnection.Finalize">
            <summary>
            Destructor for the CableTrayConnection base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeSpool">
            <summary>
            Class representing PipeSpool.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSpool.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeSpool class.
            </summary>
            <param name="oBOP">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSpool.Finalize">
            <summary>
            Destructor for the PipeSpool base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeSpool.IsSpoolOverSized">
            <summary>
            Gets whether the spool is oversized.
            </summary>
            <example>This example shows how to check if the spool is oversized.
            <code>
            'Create the PipeSpool object.
            Dim oPipeSpool As PipeSpool = Nothing
            Dim bIsSpoolOvesized As Boolean = oPipeSpool.IsSpoolOverSized()
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeSpool.Parts">
            <summary>
            Gets the parts under the spool.
            </summary>
            <example>This example shows how to get the parts associated with a spool.
            <code>
            'Get parts associated with a spool.
            'Create a PipeSpool object.
            Dim oPipeSpool As PipeSpool
            Dim oPartsCol As ReadOnlyCollection(Of BusinessObject) = oPipeSpool.Parts()
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.DuctTurnFeature">
            <summary>
            Wrapper for Route Duct Turn feature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctTurnFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the DuctTurnFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctTurnFeature.#ctor">
            <summary>
            Public constructor for the DuctTurnFeature base class
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.DuctTurnFeature.Finalize">
            <summary>
            Destructor for the DuctTurnFeature base class
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.Cableway">
            <summary>
            Cableway is the .NET wrapper class for Cableway objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for cableways.
            </summary>
            <param name="oBOP">Priavate business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CablewaySpec)">
            <summary>
            Public constructor for the cableway wrapper class that uses parent system and cableway
            specification name as an input parameters.
            </summary>
            <param name="oParentSystem">Parent system of the new cableway.</param>
            <param name="oCablewaySpec">Cableway specification object.</param>
            <exception cref="T:System.ArgumentNullException">Null arguments.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Access denied.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Parent system is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid parent system.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedToGetAllowableSpecs">Failed to get allowable specs.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidSpecException">Invalid given cableway spec object.</exception>
            <exception cref="T:System.OutOfMemoryException">Failed to create the cableway due to out-of-memory problem.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Failed to create cableway run.</exception>
            <example>This example shows how to create the cableway.
            <code>
            'Get the cableway spec object.
            Dim oCablewaySpec As CablewaySpec = Nothing
            'Get the Parent system for the cableway.
            Dim oSystem As ISystem = Nothing
            'Create the Cableway.
            Dim oCableway As New Cableway(oSystem, oCablewaySpec)        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.#ctor(Ingr.SP3D.Route.Middle.Cableway)">
            <summary>
            Copy constructor for the cableway wrapper class.
            </summary>
            <param name="oCablewayToCopy">Cableway to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Input argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Access denied exception.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.FailedToCreateRunException">Failed to create run object.</exception>        
            <example>This example shows how to perform copy constructor of the cableway.
            <code>
            'Get the existing cableway.
            Dim oCablewayToCopy As Cableway = Nothing
            'Using copy constructor to copy the existing cableway.
            Dim oCableway As New Cableway(oCablewayToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.Finalize">
            <summary>
            Destructor for the cableway class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenPointAndPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.CablewayEndFeature@)">
            <summary>
            Routes a leg between two passed in positions.
            </summary>
            <param name="oFromPosition">Leg starting position.</param>
            <param name="oToPosition">Leg end position.</param>
            <param name="oRteCrossSection">Leg cross section.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oCablewayEndFeature">Newly created end feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPointAndPointException">Failed to route between point and point.</exception>
            <example>This example explains how to route a cableway between point and a point.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define oFromPosition, oToPosition from where the route must start and end.
            Dim oFromPosition As Position = Nothing
            Dim oToPosition As Position = Nothing
            'Define the Route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.785 'Set the orientation angle in radians.
            Dim oCablewayEndFeat As RouteFeature = Nothing
            'Using RouteBetweenPointAndPoint() route a cableway from a point to another point.
            oCableway.RouteBetweenPointAndPoint(oFromPosition, oToPosition, oCrossSection, dOrientationAngle, oCablewayEndFeat)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenEndFeatureAndPoint(Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.CablewayEndFeature@)">
            <summary>
            Routes a leg from given end feature to given position.
            </summary>
            <param name="oCablewayEndFeature">Cableway end feature at which the new leg will start.</param>
            <param name="oToPosition">End position of new leg.</param>
            <param name="oRteCrossSection">Cross section of cableway.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oNewCablewayEndFeature">Newly created end feature at passed in position.</param>        
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndPointException">Failed to route between end feature and Point.</exception>
            <example>This example explains how to route between end feature and a point.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the CablewayEndFeature from where the route has to start.
            Dim oCablewayEndFeat As CablewayEndFeature = Nothing
            'Define ToPosition from where the route has to end.
            Dim oToPosition As Position = Nothing
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim oRouteEndFeat As RouteFeature = Nothing
            'Using RouteBetweenEndFeatureAndPoint() route a cableway from end path feature to a point.
            oCableway.RouteBetweenEndFeatureAndPoint(oCablewayEndFeat, oToPosition, oCrossSection, dOrientationAngle, oRouteEndFeat)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenBranchAndPoint(Ingr.SP3D.Route.Middle.CablewayStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.CablewayEndFeature@)">
            <summary>
            Routes the cableway from the position of a straight feature to the point in the free space.
            </summary>
            <param name="oCablewayStraightFeature">Cableway straight feature on which to branch out.</param>
            <param name="oBranchPosition">Position of the straight feature.</param>
            <param name="oToPosition">Position in the free space.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oCablewayEndFeature">Return newly created cableway end feature.</param>        
            <exception cref="T:System.ArgumentNullException">One or more of input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndPointException">Failed to route between branch and point.</exception>
            <example>This example explains how to route between branch and point.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the CablewayStraightFeature from which we are branching out.
            Dim oCablewayStraightFeat As CablewayStraightFeature = Nothing
            Dim oBranchFromPosition As Position = Nothing
            'Define ToPosition from where the route has to end.
            Dim oToPosition As Position = Nothing
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim oRouteEndFeat As RouteFeature = Nothing
            'Using RouteBetweenBranchAndPoint() route a cableway from branch feature to a point.
            oCableway.RouteBetweenBranchAndPoint(oCablewayStraightFeat, oBranchFromPosition, oToPosition, oCrossSection, dOrientationAngle, oRouteEndFeat)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenBranchAndBranch(Ingr.SP3D.Route.Middle.CablewayStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.CablewayStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg from the position of a straight feature to the position of other straight feature.
            </summary>
            <param name="oFromCablewayStraightFeature">Cableway straight feature on which to branch out.</param>
            <param name="oBranchFromPosition">Position from cableway straight feature.</param>
            <param name="oToCablewayStraightFeature">Cableway straight feature on which to branch in.</param>
            <param name="oBranchToPosition">Position of the ending cableway straight feature.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndBranchException">Failed to route between branch and branch.</exception>
            <example>This example explains how to route between two branches.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the CablewayStraightFeature from which we are branching out.
            Dim oCablewayFromStraightFeat As CablewayStraightFeature = Nothing
            Dim oBranchFromPosition As Position = Nothing
            'Define the CablewayStraightFeature to which we are branching in.
            Dim oCablewayToStraightFeat As CablewayStraightFeature = Nothing
            Dim oBranchToPosition As Position = Nothing
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenBranchAndBranch() route a cableway between two branches.
            oCableway.RouteBetweenBranchAndBranch(oCablewayFromStraightFeat, oBranchFromPosition, oCablewayToStraightFeat, oBranchToPosition, oCrossSection, dOrientationAngle)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenBranchAndEndFeature(Ingr.SP3D.Route.Middle.CablewayStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg from the position of a straight feature to the end feature. 
            </summary>
            <param name="oCablewayStraightFeature">Cableway straight feature on which to branch out.</param>
            <param name="oBranchPosition">Position of the cableway straight feature.</param>
            <param name="oCablewayEndFeature">Cableway end feature at which the routing leg ends.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenBranchAndEndFeatureException">Failed to route from a position of straight feature to the end feature.</exception>
            <example>This example explains how to route from the position of a straight feature to the end feature.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the CablewayStraightFeature from which we are branching out.
            Dim oCablewayStraightFeature As CablewayStraightFeature = Nothing
            Dim oBranchPosition As Position = Nothing
            'Define the CablewayEndFeature to which we are branching in.
            Dim oCablewayEndFeature As CablewayEndFeature = Nothing
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenBranchAndEndFeature(), to route a cableway from branch feature to end feature.
            oCableway.RouteBetweenBranchAndEndFeature(oCablewayStraightFeature, oBranchPosition, oCablewayEndFeature, oCrossSection, dOrientationAngle)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenPortAndPort(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg from one port to another. 
            </summary>
            <param name="oFromPort">Port from which the leg starts.</param>
            <param name="oToPort">Port to which the leg ends.</param>
            <param name="oRteCrossSection">Leg cross section.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndPortException">Failed to route from one port to another.</exception>
            <example>This example explains how to route from one port to another.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the two cableway ports, ie, oFormDistributionPort,oToDistributionPort.
            Dim oFormDistributionPort As DistributionPort
            Dim oToDistributionPort As DistributionPort
            'Define the Route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenPortAndPort(), to route a cableway between two ports.
            oCableway.RouteBetweenPortAndPort(oFormDistributionPort, oToDistributionPort, oCrossSection, dOrientationAngle)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenPortAndBranch(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.CablewayStraightFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg from port to a branch. 
            </summary>
            <param name="oPort">Port from which the leg starts.</param>
            <param name="oCablewayStraightFeature">Cableway straight feature into which to branch in.</param>
            <param name="oBranchPosition">Position on the cableway straight feature.</param>
            <param name="oRteCrossSection">Leg cross section.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndBranchException">Failed to route between port and branch.</exception>
            <example>This example explains how to route between port and branch.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the fromCablewayport from which route has to start.
            Dim oFormDistributionPort As DistributionPort
            'Define the ToCablewayStraightFeature on which route has to end.
            Dim oToCablewayStraightFeat As CablewayStraightFeature
            Dim oToBranchPosition As Position
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenPortAndBranch(), to route a cableway from port to branch.
            oCableway.RouteBetweenPortAndBranch(oFormDistributionPort, oToCablewayStraightFeat, oToBranchPosition, oCrossSection, dOrientationAngle)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenPortAndEndFeature(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg between port and end feature.
            </summary>
            <param name="oPort">Port from which the leg starts.</param>
            <param name="oCablewayEndFeature">Cableway end feature where the leg ends.</param>
            <param name="oRteCrossSection">Leg cross section.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenPortAndEndFeatureException">Failed to route between port and end feature.</exception>
            <example>This example explains how to route between a port and end feature.
            <code>        
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the fromCablewayport from which route has to start.
            Dim oFormDistributionPort As DistributionPort
            'Define the oToCablewayEndFeature.
            Dim oToCablewayEndFeat As CablewayEndFeature
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenPortAndEndFeature(), to route a cableway from port to end feature.
            oCableway.RouteBetweenPortAndEndFeature(oFormDistributionPort, oToCablewayEndFeat, oCrossSection, dOrientationAngle)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenEndFeatureAndEndFeature(Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double)">
            <summary>
            Routes a leg between two end features.
            </summary>
            <param name="oFromEndFeature">Cableway end feature at which the new leg will start.</param>
            <param name="oToEndFeature">Cableway end feature at which the new leg will end.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">Failed to route between two end features.</exception>
            <example>This example explains how to route between two end features.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the oFromCablewayEndFeat, oToCablewayEndFeat
            Dim oFromCablewayEndFeat As CablewayEndFeature
            Dim oToCablewayEndFeat As CablewayEndFeature
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Using RouteBetweenEndFeatureAndEndFeature(), to route a cableway between two end features.
            oCableway.RouteBetweenEndFeatureAndEndFeature(oFromCablewayEndFeat, oToCablewayEndFeat, oCrossSection, dOrientationAngle)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.RouteBetweenPortAndPoint(Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.CablewayEndFeature@)">
            <summary>
            Routes a leg between port and point.
            </summary>
            <param name="oPort">Port from which the leg must start.</param>
            <param name="oPosition">Position at which the leg must end.</param>
            <param name="oCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oCablewayEndFeature">Newly created end feature at given position.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteRouteBetweenEndFeatureAndEndFeatureException">Failed to route between two end features.</exception>
            <example>This example explains how to route between port and point.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the fromCablewayport from which route has to start.
            Dim oFormDistributionPort As DistributionPort
            'Define the ToPosition.
            Dim oToPosition As Position
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim oRouteEndFeat As RouteFeature
            'Using RouteBetweenPortAndPoint(), to route a cableway from port to point.
            oCableway.RouteBetweenPortAndPoint(oFormDistributionPort, oToPosition, oCrossSection, dOrientationAngle, oRouteEndFeat)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.InsertFeatureByPartOnFeature(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Route.Middle.RouteFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a feature on a feature given part.
            </summary>
            <param name="oCatalogPart">Catalog part which has to be inserted.</param>
            <param name="oInsertOnFeature">Feature on which to insert the feature.</param>
            <param name="oInsertAtPosition">Position at which the component must be inserted.</param>
            <param name="oInsertedFeature">Newly created feature at given position.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnFeatureException">An unexpected error occurred.</exception>
            <example>This example explains how to insert a feature on a given feature (straight/end).
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the Part(Catalog part) which is to be inserted.
            Dim oCatalogPart As Part = Nothing
            'Define the feature on which the component has to be inserted.
            Dim oInsertOnFeature As RouteFeature = Nothing
            'Define the position on the straight feature where the component must be inserted.
            'In case of an end feature, end feature location is taken irrespective of the location passed in here.
            Dim oInsertAtPosition As Position = Nothing
            'Declare a variable to hold the new inserted feature returned by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertFeatureByPartOnFeature(), to insert a component on a cableway straight feature or an end feature.
            oCableway.InsertFeatureByPartOnFeature(oCatalogPart, oInsertOnFeature, oInsertAtPosition, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.InsertFeatureByPartOnPort(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.DistributionPort,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Insert cableway feature on port by passing catalog part.
            </summary>
            <param name="oCatalogPart">Inserting catalog part.</param>
            <param name="oInsertOnPort">Equipment or component port.</param>
            <param name="oInsertedFeature">Inserted cableway feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertFeatureByPartOnPortException">Unexpected error while inserting feature by part on given port.</exception>        
            <example>This example explains how to insert feature on given port (component/equipment port).
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define the part (catalog part) which is to be inserted.
            Dim oCatalogPart As Part = Nothing
            'Define the port on which the component has to be inserted.
            Dim oInsertOnPort As DistributionPort = Nothing
            'Declare a variable to hold the new inserted feature returned by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertFeatureByPartOnPort(), to insert a component on a component port or equipment port.
            oCableway.InsertFeatureByPartOnPort(oCatalogPart, oInsertOnPort, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.InsertSlantedTransitionOnEndFeature(Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a slanted transition on a given end feature.
            </summary>
            <param name="oInsertOnFeature">Cableway end feature on which the slanted transition needs to be inserted.</param>
            <param name="oEndTransitionPos">End transition position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="oInsertedTransition">Returns the inserted slanted transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertSlantedTransitionOnEndFeatException">An unexpected error occurred.</exception>
            <example>This example explains how to insert a slanted transition on a given end feature.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing       
            Dim oInsertOnFeature As EndFeature = Nothing        
            'Define end transition position.
            Dim oEndTransitionPos As Position = Nothing
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            'Declare a variable to hold the new inserted feature returned by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertSlantedTransitionOnEndFeature(), to insert a slanted transition on end feature.
            oCableway.InsertSlantedTransitionOnEndFeature(oInsertOnFeature, oEndTransitionPos, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.InsertTurnTransitionOnEndFeature(Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,System.Double,Ingr.SP3D.Route.Middle.TurnTransAlignTypes,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts a turn transition on a given end feature.
            </summary>
            <param name="oInsertOnFeature">Cableway end feature on which the turn transition needs to be inserted.</param>
            <param name="oEndTransitionPos">End transition position.</param>
            <param name="oRteCrossSection">Cross section of the leg.</param>
            <param name="dOrientationAngle">Orientation angle of the leg in radians.</param>
            <param name="dThroatRadius">Throat radius.</param>
            <param name="eTurnAlign">Turn alignment type.</param>        
            <param name="oInsertedTransition">Returns the inserted turn transition.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertTurnTransitionOnEndFeatureException">An unexpected error occurred in InsertTurnTransitionOnEndFeature method.</exception>
            <example>This example explains how to insert a turn transition on a given end feature.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            Dim oInsertOnFeature As CablewayEndFeature = Nothing
            'Define end transition position.
            Dim oEndTransitionPos As Position = Nothing
            'Define the route cross section object and set its properties.
            Dim oCrossSection As New RouteCrossSection()
            oCrossSection.Width = 0.15 'Set the Width value.
            oCrossSection.Depth = 0.1 'Set the Depth value.
            oCrossSection.CornerRadius = 0.0 ' Set the corner radius value.
            'Set the CrossSectionShape value.
            oCrossSection.CrossSectionShape = CrossSectionShapeTypes.Rectangular
            Dim dOrientationAngle As Double = 0.0 'Set the orientation angle in radians.
            Dim dThroatRadius As Double = 1.0 'Set throat radius value.
            Dim eTurnAlign As TurnTransAlignTypes = TurnTransAlignTypes.ALIGN_CENTER 'Set the turn align type.
            'Declare a variable to hold the new inserted feature return by this method.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Using InsertTurnTransitionOnEndFeature(), to insert a turn transition on end feature.
            oCableway.InsertTurnTransitionOnEndFeature(oInsertOnFeature, oEndTransitionPos, oCrossSection, dOrientationAngle, dThroatRadius, eTurnAlign, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.InsertStraightTransitionOnEndFeature(Ingr.SP3D.Route.Middle.CablewayEndFeature,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Route.Middle.StraightTransAlignTypes,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts straight transition on cableway end feature.
            </summary>
            <param name="oCablewayEndFeature">Cableway end feature.</param>
            <param name="oTransEndPosition">Transition end position.</param>
            <param name="eAlign">Alignment type.</param>
            <param name="oCrossSection">Cross section of transition end.</param>
            <param name="dOrientationAngle">Orintation angle of transition.</param>
            <param name="oInsertedTransition">Inserted transition feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">Invalid cross section.</exception>  
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature">Unexpected failure while inserting transition on end feature.</exception>
            <example>This example explains how to insert straight transition on end feature by passing end position as input.
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define cableway end feature on which transition is to be inserted.
            Dim oCablewayEndFeature As CablewayEndFeature = Nothing
            'Define end cross section of transition.
            Dim oCrossSection As RouteCrossSection = Nothing
            'Define end position of transition.
            Dim oEndPosition As Position = Nothing
            'Define straight transition alignment type.
            Dim eAlign = StraightTransAlignTypes.CENTERLINE
            'Define orientation angle of transition to be inserted.
            Dim dOrientationAngle As Double = 0.1
            'Declare a variable to hold inserted transition feature.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Use InsertStraightTransitionOnEndFeature() to insert transition on cableway end feature.
            oCableway.InsertStraightTransitionOnEndFeature(oCablewayEndFeature, oEndPosition, eAlign, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.InsertStraightTransitionOnEndFeature(Ingr.SP3D.Route.Middle.CablewayEndFeature,System.Double,Ingr.SP3D.Route.Middle.StraightTransAlignTypes,Ingr.SP3D.Route.Middle.Services.RouteCrossSection,System.Double,Ingr.SP3D.Route.Middle.RouteFeature@)">
            <summary>
            Inserts straight transition on cableway end feature.
            </summary>
            <param name="oCablewayEndFeature">Cableway end feature.</param>
            <param name="dTransLength">Length of transition.</param>
            <param name="eAlign">Alignment type.</param>
            <param name="dOrientationAngle">Orientation angle of transition.</param>
            <param name="oCrossSection">Cross section of transistion.</param>
            <param name="oInsertedTransition">Inserted transition feature.</param>
            <exception cref="T:System.ArgumentNullException">Input arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInvalidTransitionCrossSection">Invalid cross section.</exception>  
            <exception cref="T:Ingr.SP3D.Route.Exceptions.RteInsertStraightTransitionOnEndFeature">Unexpected failure while inserting transition on end feature.</exception>
            <example>This example explains how to insert straight transition on end feature by passing transition length as input. 
            <code>
            'Create the cableway.
            Dim oCableway As Cableway = Nothing
            'Define cableway end feature on which transition is to be inserted.
            Dim oCablewayEndFeature As CablewayEndFeature = Nothing
            'Define end cross section of transition.
            Dim oCrossSection As RouteCrossSection = Nothing
            'Define length of transition.
            Dim dTransLength As Double = 1.0
            'Define straight transition alignment type.
            Dim eAlign = StraightTransAlignTypes.CENTERLINE
            'Define orientation angle of transition to be inserted.
            Dim dOrientationAngle As Double = 0.1
            'Declare a variable to hold inserted transition feature.
            Dim oInsertedFeature As RouteFeature = Nothing
            'Use InsertStraightTransitionOnEndFeature() to insert transition on cableway end feature.
            oCableway.InsertStraightTransitionOnEndFeature(oCablewayEndFeature, dTransLength, eAlign, oCrossSection, dOrientationAngle, oInsertedFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.Cableway.GetOrientationAngle(System.Double)">
            <summary>
            Converts to corresponding +ve value if we pass -ve values. 
            </summary>        
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CablewayTurnFeature">
            <summary>
            Wrapper for Route CablewayTurnFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayTurnFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the CablewayTurnFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayTurnFeature.#ctor">
            <summary>
            Public constructor for the CablewayTurnFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CablewayTurnFeature.Finalize">
            <summary>
            Destructor for the CablewayTurnFeature base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.ConduitBranchFeature">
            <summary>
            Wrapper for the route ConduitBranchFeature class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitBranchFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the ConduitBranchFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitBranchFeature.#ctor">
            <summary>
            Public constructor for the ConduitBranchFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.ConduitBranchFeature.Finalize">
            <summary>
            Destructor for the ConduitBranchFeature base class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.ConduitBranchFeature.ShortCode">
            <summary>
             Gets or sets the short code property on the ConduitBranchFeature class.
            </summary>
             <example>This example shows how to get or set short code property on ConduitBranchFeature.
             <code>
             Dim sShortCode As string
             'Get shortcode on ConduitBranchFeature
             sShortCode = oConduitBranchFeature.ShortCode
             'Define shortcode
             sShortCode = "ReducingTee"
             'Set shortcode on ConduitBranchFeature    
             oConduitBranchFeature.ShortCode = sShortCode
             </code>
             </example>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature">
            <summary>
            Defines the properties and methods on a PipeSurfaceMount feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeSurfaceMountFeature base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.#ctor">
            <summary>
            Public constructor for the PipeSurfaceMountFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.Finalize">
            <summary>
            Destructor for the PipeSurfaceMountFeature base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec)">
            <summary>
            Sets the insulation specification assigned to the feature. This method validates the insulation temperature on the feature  
            before setting the insulation specification on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.SetInsulationSpec(Ingr.SP3D.ReferenceData.Middle.PipeInsulationSpec,System.Double)">
            <summary>
            Assigns the insulation specification to the feature. Passed in insulation temperature will be validated and set on the feature.
            </summary>
            <param name="PipeInsulationSpec">Insulation specification object to set.</param>
            <param name="InsulationTemperature">Insulation temperature value to set.</param>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.ShortCode">
            <summary>
            Gets or sets the short code property on the PipeSurfaceMount feature.
            </summary>
            
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.PipeSurfaceMountFeature.InsulationSpec">
            <summary>
             Gets the insulation specification property.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.PipeSpecialty">
            <summary>
            PipeSpeciality is the .NET wrapper class for Pipe Speciality objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSpecialty.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the PipeSpecialty base class.
            </summary>
            <param name="oBOP">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSpecialty.#ctor">
            <summary>
            Public constructor for the PipeSpecialty base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.PipeSpecialty.Finalize">
            <summary>
            Destructor for the PipeSpecialty base class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Route.Middle.CableRun">
            <summary>
            CableRun is the .Net wrapper class for CableRun objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableRun.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for cablerun.
            </summary>
            <param name="oPBO">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableRun.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IConnectable,Ingr.SP3D.Common.Middle.IConnectable)">
             <summary>
             Constructor for cable run class.
             </summary>
             <param name="oParentSystem">Parent system of cable.</param>
             <param name="oCableCatalogPart">Catalog part of the cable.</param>
             <param name="oOriginatingDevice">Originating device.</param>
             <param name="oTerminatingDevice">Terminating device.</param>
             <exception cref="T:System.ArgumentNullException">Null arguments.</exception>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid input arguments.</exception>
             <exception cref="T:Ingr.SP3D.Route.Exceptions.RteFailedtoCreateCableRunException">Unexpected failure while creating cable run.</exception>
            <example>This example explains about how to create cable run.
            <code>
            'Get parent system for cablerun.
            Dim oSystem As ISystem = Nothing
            'Define terminal device.
            Dim oTerminal1 As IConnectable = Nothing
            'Define terminal device.
            Dim oTerminal2 As IConnectable = Nothing
            'Define cable part.
            Dim oCablePart As Part = Nothing
            'Create cable.
            Dim oCablerun As New CableRun(oSystem, oCablePart, oTerminal1, oTerminal2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableRun.Finalize">
            <summary>
            Destructor for the cable run wrapper class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableRun.ConnectToPortOnOriginatingDevice(Ingr.SP3D.Common.Middle.IPort)">
             <summary>
             Connects cable to specified port on an originating device.
             </summary>
             <param name="oCablePortOnOriginatingDevice">Cable port on originating device.</param>
             <exception cref="T:System.ArgumentNullException">Null arguments.</exception>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid port.</exception>
            <example>
            <code>
            'Create run 
             Dim oCableRun As CableRun = Nothing 
            'Get port on originating device. 
             Dim oCablePort As IPort = Nothing 
            'Connect cable to specified port on originating device. 
             oCableRun.ConnectToPortOnOriginatingDevice(oCablePort)         
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Route.Middle.CableRun.ConnectToPortOnTerminatingDevice(Ingr.SP3D.Common.Middle.IPort)">
             <summary>
             Connects cable to specified port on terminating device.
             </summary>
             <param name="oCablePortOnTerminatingDevice">Cable port on terminating device.</param>
             <exception cref="T:System.ArgumentNullException">Null arguments.</exception>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid port.</exception>
             <example>
             <code>
            'Create run. 
             Dim oCableRun As CableRun = Nothing 
            'Get port on terminating device. 
             Dim oCablePort As IPort = Nothing 
            'Connect cable to specified port on terminating device. 
             oCableRun.ConnectToPortOnOriginatingDevice(oCablePort) 
             </code>
             </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.CableRun.OriginatingDevice">
             <summary>
             Gets or sets originating device of cable run.
             </summary>
             <exception cref="T:System.ArgumentNullException">Null arguments.</exception>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid originating device.</exception>
             <example>Example explains how to get or set originating device of cable run.
             <code>
             'Define cable run. 
            Dim oCableRun As CableRun = Nothing 
            'Get originating device of cable run. 
            Dim oOriginatingDevice As IConnectable = oCableRun.OriginatingDevice 
            'Set originating device of cable run. 
            Dim oNewdevice As IConnectable = Nothing 
            oCableRun.OriginatingDevice = oNewdevice 
             </code>
             </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.CableRun.TerminatingDevice">
             <summary>
             Gets or sets terminating device of cable run.
             </summary>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid terminating device.</exception>
            <example>Example explains how to get or set terminating device of cable run.
            <code>
             'Define cable run. 
            Dim oCableRun As CableRun = Nothing 
            'Get terminating device of cable run. 
            Dim oTerminatingDevice As IConnectable = oCableRun.TerminatingDevice 
            'Set terminating device of cable run. 
            Dim oNewdevice As IConnectable = Nothing 
            oCableRun.TerminatingDevice = oNewdevice 
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.CableRun.Cable">
             <summary>
             Gets or sets cable part of this run.
             </summary>
            <example>This example explains how to get or set cable part of cable run.
            <code>
            'Define cable run. 
            Dim oCableRun As CableRun = Nothing 
            'Define cable part. 
            Dim oCable As CablePart = Nothing 
            'Get cable. 
            oCable = oCablerun.Cable 
            'Change cable part. 
            Dim oNewCable As CablePart = Nothing 
            'Set cable on this run. 
            oCablerun.Cable = oNewCable         
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Route.Middle.CableRun.SignalType">
             <summary>
             Gets or sets signal type of cable run.
             </summary>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Invalid signal type.</exception>
            <example>Example explains how to get or set signal type of cable run.
            <code>
            'Define cable run. 
            Dim oCableRun As CableRun = Nothing 
            'Get signal type of cable run. 
            Dim iSignalType As Integer = oCableRun.SignalType 
            'Set signal type of cable run. 
            iSignalType = 5 
            oCableRun.SignalType = iSignalType 
            </code>
            </example>
        </member>
    </members>
</doc>
